#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/packages/twingate-connector/archive.sharun.stable.yaml
_disabled: false

pkg: "twingate"
pkg_id: "sharun.wrappe.twingate-connector.stable"
pkg_type: "archive"
category:
  - "Utility"
description: 
  _default: "Zero trust remote access client for resource and networks"
  twingate-connector: "Connect your system to your Twingate Network [twingate]"
  twingate-connectorctl: "Controller for Twingate Connector [twingate]"
homepage:
  - "https://www.twingate.com/docs"
  - "https://www.twingate.com"
license:
  - "Unfree"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using Sharun [Deb Package]. Check/Report @ https://github.com/VHSgunzo/sharun"
  - "Learn more @ https://docs.pkgforge.dev/formats/packages/archive"
  - "[PORTABLE] (Works on AnyLinux)"
  - "[NO_DESKTOP_INTEGRATION] (Does not need desktop integration)"
provides:
  - "twingate-connector"
  - "twingate-connectorctl"
repology:
  - "twingate"
src_url:
  - "https://packages.twingate.com/deb:twingate-connector"
tag:
  - "Utility"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://packages.twingate.com/deb:twingate-connector" | grep -oP '"version"\s*:\s*"\K\d+(\.\d+)+(-\w+)?' | tr -d '"'\''[:space:]'
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "debian-builder-unstable" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/debian-builder-unstable:$(uname -m)" \
      bash -l -c '
       #Setup ENV
        set -x ; chown -R "$(whoami):$(whoami)" "/tmp" 2>/dev/null ; chmod -v '1777' '/tmp'
        mkdir -p "/build-bins" && pushd "$(mktemp -d)" >/dev/null 2>&1
        apt clean -y ; apt update -y -qq 2>/dev/null
        apt update -y -qq
       #CoreUtils
        apt install bash binutils coreutils curl findutils file g++ git grep jq libc-dev moreutils patchelf rsync sed strace tar tree xz-utils zstd -y -qq 2>/dev/null
       #Sharun
        curl -w "(DL) <== %{url}\n" -qfSL "https://github.com/VHSgunzo/sharun/releases/latest/download/sharun-$(uname -m)-aio" -o "/usr/local/bin/sharun"
        chmod -v "a+x" "/usr/local/bin/sharun"
        command -v sharun &>/dev/null || echo -e "\n[X] FATAL: sharun is NOT Installed\n$(exit 1)" 
       #Install
         apt install autoconf curl git g++ libffi-dev libxml2-dev libxslt-dev libssl-dev openssl python3-dev -y -qq 
        #Build
         curl "https://binaries.twingate.com/connector/setup.sh" | bash
         apt show "twingate-connector" ; dpkg-query -L "twingate-connector"
         export TWINGATE_ACCESS_TOKEN="aaaaa" 
         export TWINGATE_REFRESH_TOKEN="aaaaa"
         export TWINGATE_NETWORK="aaaaaa" 
         export TWINGATE_LABEL_DEPLOYED_BY="linux"
         sharun lib4bin --gen-lib-path --with-hooks --with-wrappe --wrappe-clvl "22" --wrappe-exec "twingate-connector" --dst-dir "./SHARUN_WRAPPED" "$(realpath $(which "twingate-connector"))" --
         sharun lib4bin --gen-lib-path --with-hooks --with-wrappe --wrappe-clvl "22" --wrappe-exec "twingate-connectorctl" --dst-dir "./SHARUN_WRAPPED" "$(realpath $(which "twingate-connectorctl"))" --
       #Copy
        find "./SHARUN_WRAPPED" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" cp -fv "{}" "/build-bins/"
        dpkg-query -L "${PKG}" | grep -i "usr/share/metainfo/" | grep -im1 "appdata\.xml" | tr -d "[:space:]" | head -n 1 | xargs -I "{}" cp -fv "/{}" "/build-bins/${PKG}.appdata.xml"
        dpkg-query -L "${PKG}" | grep -i "usr/share/applications/" | grep -im1 "desktop" | tr -d "[:space:]" | head -n 1 | xargs -I "{}" cp -fv "/{}" "/build-bins/${PKG}.desktop"
        dpkg-query -L "${PKG}" | grep -i "usr/share/metainfo/" | grep -im1 "metainfo\.xml" | tr -d "[:space:]" | head -n 1 | xargs -I "{}" cp -fv "/{}" "/build-bins/${PKG}.metainfo.xml"
        dpkg-query -L "${PKG}" | grep -i "usr/share/icons/hicolor" | grep -i "png" | sort -V | tail -n 1 | tr -d "[:space:]" | xargs -I "{}" cp -fv "/{}" "/build-bins/${PKG}.png"
        dpkg-query -L "${PKG}" | grep -i "usr/share/icons/hicolor" | grep -i "svg" | sort -V | tail -n 1 | tr -d "[:space:]" | xargs -I "{}" cp -fv "/{}" "/build-bins/${PKG}.svg"
        dpkg-query -L "${PKG}" | grep -i "usr/share/license" | sort -V | tail -n 1 | tr -d "[:space:]" | xargs -I "{}" cp -fv "/{}" "/build-bins/LICENSE"
       #Info
        file "/build-bins/"* && du -sh "/build-bins/"*
        popd >/dev/null 2>&1
      '
    #Copy & Meta
     docker cp "debian-builder-unstable:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei 'application/.*executable|text/x-perl|text/.*script' | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"