#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/packages/sanicdns/archive.sharun.stable.yaml
_disabled: false

pkg: "sanicdns"
pkg_id: "sharun.wrappe.stable.sanicdns"
pkg_type: "archive"
category:
  - "Utility"
description: "Recursive DNS Resolver"
homepage:
  - "https://github.com/hadriansecurity/sanicdns"
license:
  - id: "AGPL-3.0"
    url: "https://github.com/hadriansecurity/sanicdns/raw/ac334189496d8d1108b50ab914b3b2e19aeb25c2/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using Sharun [Stable]. Check/Report @ https://github.com/VHSgunzo/sharun"
  - "Learn more @ https://docs.pkgforge.dev/formats/packages/archive"
  - "[PORTABLE] (Works on AnyLinux)"
  - "[NO_DESKTOP_INTEGRATION] (Does not need desktop integration)"
provides:
  - "sanicdns"
repology:
  - "sanicdns"
src_url:
  - "https://github.com/hadriansecurity/sanicdns"
tag:
  - "Utility"
x_exec:
  host:
    #- "aarch64-Linux" https://github.com/hadriansecurity/sanicdns/issues/14
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://api.gh.pkgforge.dev/repos/hadriansecurity/sanicdns/releases?per_page=100" | jq -r '[.[] | select(.draft == false and .prerelease == false)] | .[0].tag_name | gsub("\\s+"; "")' | tr -d '"'\''[:space:]'
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "debian-builder-unstable" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/debian-builder-unstable:$(uname -m)" \
      bash -l -c '
       #Setup ENV
        set -x ; chown -R "$(whoami):$(whoami)" "/tmp" 2>/dev/null ; chmod -v '1777' '/tmp'
        mkdir -p "/build-bins" && pushd "$(mktemp -d)" >/dev/null 2>&1
        apt clean -y ; apt update -y -qq 2>/dev/null
        apt update -y -qq
       #CoreUtils
        apt install bash binutils coreutils curl findutils file g++ git grep jq libc-dev moreutils patchelf rsync sed strace tar tree xz-utils zstd -y -qq 2>/dev/null
       #Sharun
        curl -w "(DL) <== %{url}\n" -qfSL "https://github.com/VHSgunzo/sharun/releases/latest/download/sharun-$(uname -m)-aio" -o "/usr/local/bin/sharun"
        chmod -v "a+x" "/usr/local/bin/sharun"
        command -v sharun &>/dev/null || echo -e "\n[X] FATAL: sharun is NOT Installed\n$(exit 1)"
       #Install:
        curl -qfsSL "https://raw.githubusercontent.com/hadriansecurity/sanicdns/main/install.sh" | sudo bash
        command -v sanicdns &>/dev/null || echo -e "\n[X] FATAL: sanicdns is NOT Installed\n$(exit 1)"
       #Bundle
        curl -qfSL "https://raw.githubusercontent.com/hadriansecurity/sanicdns/main/majestic_million.txt" | shuf -n 1000 > "./test.txt"
        sharun lib4bin --gen-lib-path --with-hooks --with-wrappe --wrappe-clvl "22" --wrappe-exec "sanicdns" --dst-dir "./SHARUN_WRAPPED" "$(realpath $(which "sanicdns"))" -- --input-file "./test.txt" -r "200" -c "1000" --resolvers "1.1.1.1,1.0.0.1" -o "./tmp.txt"
       #Copy
        find "./SHARUN_WRAPPED" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" cp -fv "{}" "/build-bins/"
        ( askalono --format "json" crawl --follow "$(realpath .)" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/LICENSE" ) 2>/dev/null
       #Info
        file "/build-bins/"* && du -sh "/build-bins/"*
        popd >/dev/null 2>&1
      '
    #Copy & Meta
     docker cp "debian-builder-unstable:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei 'application/.*executable|text/x-perl|text/.*script' | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"