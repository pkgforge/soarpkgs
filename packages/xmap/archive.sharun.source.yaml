#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/packages/xmap/archive.sharun.source.yaml
_disabled: false

pkg: "xmap"
pkg_id: "sharun.wrappe.source.xmap"
pkg_type: "archive"
category:
  - "Utility"
description: "Fast Internet-wide IPv6 & IPv4 network scanner"
distro_pkg:
  archlinux:
    aur:
      - "xmap-git"
homepage:
  - "https://github.com/idealeer/xmap"
license:
  - id: "Apache-2.0"
    url: "https://github.com/idealeer/xmap/raw/c7af1c2959194cdaaf1de1620873c00127c21446/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using Sharun [Source]. Check/Report @ https://github.com/VHSgunzo/sharun"
  - "Learn more @ https://docs.pkgforge.dev/formats/packages/archive"
  - "[PORTABLE] (Works on AnyLinux)"
  - "[NO_DESKTOP_INTEGRATION] (Does not need desktop integration)"
provides:
  - "xmap"
repology:
  - "xmap"
src_url:
  - "https://github.com/idealeer/xmap"
tag:
  - "security"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    pushd "$(mktemp -d)" >/dev/null 2>&1 && \
    git clone --depth="1" --filter="blob:none" --no-checkout --single-branch --quiet "https://github.com/idealeer/xmap" "./TEMPREPO" >/dev/null 2>&1 && \
    git --git-dir="./TEMPREPO/.git" --no-pager log -1 --pretty=format:'HEAD-%h-%cd' --date=format:'%y%m%dT%H%M%S' && \
    [ -d "$(realpath .)/TEMPREPO" ] && rm -rf "$(realpath .)" >/dev/null 2>&1 && popd >/dev/null 2>&1
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "debian-builder-unstable" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/debian-builder-unstable:$(uname -m)" \
      bash -l -c '
       #Setup ENV
        set -x ; chown -R "$(whoami):$(whoami)" "/tmp" 2>/dev/null ; chmod -v '1777' '/tmp'
        mkdir -p "/build-bins" && pushd "$(mktemp -d)" >/dev/null 2>&1
        apt clean -y ; apt update -y -qq 2>/dev/null
        apt update -y -qq
       #CoreUtils
        apt install bash binutils coreutils curl findutils file g++ git grep jq libc-dev moreutils patchelf rsync sed strace tar tree xz-utils zstd -y -qq 2>/dev/null
       #Sharun
        curl -qfsSL "https://api.gh.pkgforge.dev/repos/VHSgunzo/sharun/releases?per_page=100" | jq -r ".. | objects | .browser_download_url? // empty" | grep -Ei "$(uname -m)" | grep -Eiv "tar\.gz|\.b3sum" | grep -Ei "sharun" | grep -Ei "aio" | sort --version-sort | tail -n 1 | tr -d "[:space:]" | xargs -I "{}" curl -qfsSL "{}" -o "/usr/local/bin/sharun"
        chmod -v "a+x" "/usr/local/bin/sharun"
        command -v sharun &>/dev/null || echo -e "\[X] FATAL: sharun is NOT Installed\n$(exit 1)"
       #Build
      #Build:https://github.com/idealeer/xmap/blob/master/INSTALL.md
       BASE_PKGS=(byacc flex gengetopt libjson-c-dev libgmp3-dev libjudy-dev libpcap-dev libunistring-dev pkg-config)
       sudo apt clean -y
       sudo apt update -y
       for pkg in "${BASE_PKGS[@]}"; do DEBIAN_FRONTEND="noninteractive" sudo apt install "${pkg}" -y --no-install-recommends --ignore-missing 2>/dev/null; done
       git clone --filter "blob:none" --depth="1" --quiet "https://github.com/idealeer/xmap" "./TEMPREPO" && cd "./TEMPREPO"
       export CFLAGS="-Os -flto=auto -B/usr/libexec/mold -g0 -pipe -v -w -Wno-error"
       export CPPFLAGS="${CFLAGS}"
       export CXXFLAGS="${CFLAGS}"
       export LD="$(which mold)"
       export LDFLAGS="-Wl,--build-id=none,--no-fatal-warnings,--stats,--strip-all,-z,noexecstack"
       mkdir -p "./DYNAMIC_BUILD"
       cmake -GNinja -B "./DYNAMIC_BUILD" \
        -DCMAKE_BUILD_TYPE="Release" \
        -DCMAKE_C_FLAGS="${CFLAGS}" \
        -DCMAKE_CXX_FLAGS="${CFLAGS}" \
        -DCMAKE_EXE_LINKER_FLAGS="${LDFLAGS}" \
        -DCMAKE_INSTALL_PREFIX="/usr" \
        -DBUILD_SHARED_LIBS="Off" \
        -DENABLE_LOG_TRACE="OFF" \
        -DBUILD_TESTS="Off"
        cmake --build "./DYNAMIC_BUILD" -j"$(($(nproc)+1))" --clean-first --verbose
       find "./DYNAMIC_BUILD/src" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" sh -c '\''echo "File: {}"; readelf -p ".comment" "{}"'\''
       find "./DYNAMIC_BUILD/src" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable" | cut -d":" -f1 | xargs realpath | xargs -I "{}" sharun lib4bin --gen-lib-path --with-hooks --with-wrappe --wrappe-exec "$(basename {})" --dst-dir "./SHARUN_WRAPPED" "{}" --
      #Copy
       find "./SHARUN_WRAPPED" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" cp -fv "{}" "/build-bins/"
       ( askalono --format "json" crawl --follow "$(realpath .)" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/LICENSE" ) 2>/dev/null
      #Info
       file "/build-bins/"* && du -sh "/build-bins/"*
      '
    #Copy & Meta
     docker cp "debian-builder-unstable:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei 'application/.*executable|text/x-perl|text/.*script' | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"