#!/SBUILD
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/packages/wps-office/appimage.ivan-hc.stable.yaml
_disabled: false

pkg: "wps-office"
pkg_id: "github.com.ivan-hc.WPS-Office-appimage.stable"
pkg_type: "appimage"
#build_util:
#  - "curl#bin"
#  - "jq#bin"
category:
  - "Office"
description: "All-in-one Kingsoft Office Suite"
distro_pkg:
  archlinux:
    aur:
      - "wps-office"
      - "wps-office-bin"
  homebrew:
    - "wpsoffice"
  nixpkgs:
    - "wpsoffice"
    - "wpsoffice-cn"
homepage:
  - "https://www.wps.com"
license:
  - "Custom"  
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "Community Created AppImage. Check/Report @ https://github.com/ivan-hc/WPS-Office-appimage"
  - "[MULTI_DESKTOP] (This Package requires multi desktop integration)"
provides:
  - "wps-office"    
repology:
  - "wps-office"  
src_url:
  - "https://github.com/ivan-hc/WPS-Office-appimage"
tag:
  - "Office"
x_exec:
  host:
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://api.gh.pkgforge.dev/repos/ivan-hc/WPS-Office-appimage/releases/latest?per_page=100" | jq -r '.. | objects | .browser_download_url? // empty' | sed -E 's/(x86_64|aarch64)//' | tr -d '[:alpha:]' | sed 's/^[^0-9]*//; s/[^0-9]*$//' | awk -F'[-:=/]' '{print $1}' | sort --version-sort | tail -n 1 | tr -d '[:space:]'
  run: |
    #Download
    case "$(uname -m)" in
      aarch64)
        echo -e "\n[âœ—] aarch64 is Not Yet Supported\n"
       exit 1
        ;;
      x86_64)
        soar dl "https://github.com/ivan-hc/WPS-Office-appimage@continuous" --match "appimage" --exclude "aarch64,arm,zsync" -o "./${PKG}" --yes
        ;;
    esac
    #"${SBUILD_TMPDIR}/upstream.version"
     curl -qfsSL "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=wps-office" | sed -n 's/^pkgver=//p' | tr -d '"'\''[:space:]' > "${SBUILD_TMPDIR}/upstream.version"
    #Extract
     pushd "${SBUILD_TMPDIR}" &>/dev/null && \
       "${SBUILD_OUTDIR}/${PKG}" --appimage-extract >/dev/null
       if [ ! -d "./squashfs-root" ] || [ "$(du -s "./squashfs-root" | cut -f1 | tr -d '[:space:]')" -le 100 ]; then
         echo -e "\n [X] FATAL: Extraction probably Failed\n"
        exit 1
       fi
    #Icons
     find -L "${SBUILD_TMPDIR}/squashfs-root/usr" -regex ".*\(128x128/apps\|256x256/apps\)/.*\.\(png\|svg\)" -exec dirname "{}" \; | sort --version-sort | tail -n -1 | xargs -I "{}" rsync -achLv "{}/" "${SBUILD_OUTDIR}/."
    #Desktop
     find -L "${SBUILD_TMPDIR}/squashfs-root/usr" -iname "*.desktop" -print0 | xargs -0 -I "{}" cp -fv "{}" "${SBUILD_OUTDIR}/."
    #Fixup Name
     find "${SBUILD_OUTDIR}" -maxdepth 1 -type f -regextype posix-extended -regex '.*[0-9]{4}-(.*)\.(png|svg|desktop)' -exec bash -c 'mv -v "$0" "${0%/*}/$(basename "$0" | sed "s/^\([^0-9]*\)[0-9]*-/\1-/")"' "{}" \;
    #Fixup Desktop files 
     pushd "${SBUILD_OUTDIR}" &>/dev/null && \
       mapfile -t "desktops" < <(find "." -maxdepth 1 -type f -iname "*.desktop")
       for d in "${desktops[@]}"; do
         base="${d%.desktop}"; icon="${base}.png"; [ -f "${icon}" ] && continue
         match="$(find "." -maxdepth 1 -type f -regex ".*\.\(png\|svg\)" | awk -v b="${base}" '
           function l(a,b, i,j,d) {
             for (i=0; i<=length(a); i++) d[i,0]=i
             for (j=0; j<=length(b); j++) d[0,j]=j
             for (i=1; i<=length(a); i++) for (j=1; j<=length(b); j++)
               d[i,j]=min(d[i-1,j]+1, d[i,j-1]+1, d[i-1,j-1]+(substr(a,i,1)!=substr(b,j,1)))
             return d[length(a),length(b)]
           }
           function min(x,y,z) { return x<y?x<z?x:z:y<z?y:z }
           BEGIN { m=9999; bfile="" }
           { match($0,/[^/]*\.(png|svg)/); f=substr($0,RSTART,RLENGTH); d=l(b,f)
             if (d<m) { m=d; bfile=f } }
           END { print bfile }' | tr -d '[:space:]')"
         [ -n "${match}" ] && cp -fv "${match}" "${icon}"
       done
    #Fixup Icon files   
     pushd "${SBUILD_OUTDIR}" &>/dev/null && \
       mapfile -t "icons" < <(find "." -maxdepth 1 -type f -regex ".*\.\(png\|svg\)")
       for ico in "${icons[@]}"; do
         base="${ico%.*}"; desktop="${base}.desktop"
         [ -f "${desktop}" ] && continue
         match="$(find "." -maxdepth 1 -type f -name "*.desktop" | awk -v b="${base}" '
           function l(a,b, i,j,d) {
             for (i=0; i<=length(a); i++) d[i,0]=i
             for (j=0; j<=length(b); j++) d[0,j]=j
             for (i=1; i<=length(a); i++) for (j=1; j<=length(b); j++)
               d[i,j]=min(d[i-1,j]+1, d[i,j-1]+1, d[i-1,j-1]+(substr(a,i,1)!=substr(b,j,1)))
             return d[length(a),length(b)]
           }
           function min(x,y,z) { return x<y?x<z?x:z:y<z?y:z }
           BEGIN { m=9999; bfile="" }
           { match($0,/[^/]*\.desktop/); f=substr($0,RSTART,RLENGTH); d=l(b,f)
             if (d<m) { m=d; bfile=f } }
           END { print bfile }' | tr -d '[:space:]')"
         [ -n "${match}" ] && cp -fv "${match}" "${desktop}"
       done
    #Fixup everything else
     find "${SBUILD_OUTDIR}" -maxdepth 1 -type f -iname "*.desktop" -exec sed -E 's/^[[:space:]]*[Ee]xec[[:space:]]*=[[:space:]]*[^[:space:]]+/Exec={{pkg_path}}/' -i "{}" \;
     find "${SBUILD_OUTDIR}" -maxdepth 1 -type f -name "*.desktop" -exec sed -E 's/([[:space:]]*[iI][cC][oO][nN][[:space:]]*=[[:space:]]*[^0-9]*)[0-9]+-/\1-/' -i "{}" \;
     find "${SBUILD_OUTDIR}" -maxdepth 1 -type f -iname "*.desktop" -exec sed -E 's/^[[:space:]]*([iI][cC][oO][nN])=[[:space:]]*\/?.*\/([^[:space:]\/]+)[[:space:]]*/\1=\2/' -i "{}" \;
     find "${SBUILD_OUTDIR}" -maxdepth 1 -type f -iname "*.desktop" -exec sed 's/[[:space:]]*WPS[[:space:]]\+[0-9]\+[[:space:]]*/WPS OFFICE/g' -i "{}" \;
     find "${SBUILD_OUTDIR}" -maxdepth 1 -type f -iname "*.desktop" -exec sed 's/wps-office wps %F/wps-office %F/g' -i "{}" \;
     echo -e "\n[+] Missing Desktop Entries (For Icons):"
     find "${SBUILD_OUTDIR}" -maxdepth 1 -type f -regex ".*\.\(png\|svg\)" ! -exec bash -c '[[ -e "${1%.*}.desktop" ]]' _ "{}" \; -print
     echo -e "\n[+] Missing Icon Entries (For Desktop):"
     find "${SBUILD_OUTDIR}" -maxdepth 1 -type f -name "*.desktop" ! -exec bash -c '[[ -e "${1%.*}.png" || -e "${1%.*}.svg" ]]' _ "{}" \; -print