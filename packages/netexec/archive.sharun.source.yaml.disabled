#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/trifectatechfoundation/soarpkgs/refs/heads/main/packages/netexec/archive.sharun.source.yaml
_disabled: false

pkg: "netexec"
pkg_id: "sharun.wrappe.netexec.source"
pkg_type: "archive"
category:
  - "Utility"
description: "Network service exploitation tool (maintained fork of CrackMapExec)"
distro_pkg:
  archlinux:
    aur:
      - "netexec"
  nixpkgs:
    - "netexec"
homepage:
  - "https://netexec.wiki/"
  - "https://github.com/Pennyw0rth/NetExec"
license:
  - id: "BSD-2-Clause"
    url: "https://github.com/Pennyw0rth/NetExec/raw/c2f85db63b5b4323ac6f993eefa553ad276fe12f/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built From Source (Latest Git HEAD). Check/Report @ https://github.com/Pennyw0rth/NetExec"
  - "Built Using Sharun. Check/Report @ https://github.com/VHSgunzo/sharun"
  - "Learn more @ https://docs.pkgforge.dev/formats/packages/archive"
  - "[PORTABLE] (Works on AnyLinux)"
  - "[NO_DESKTOP_INTEGRATION] (Does not need desktop integration)"
provides:
  - "netexec"
repology:
  - "netexec"
src_url:
  - "https://github.com/Pennyw0rth/NetExec"
tag:
  - "crackmapexec"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    pushd "$(mktemp -d)" >/dev/null 2>&1 && \
    git clone --depth="1" --filter="blob:none" --no-checkout --single-branch --quiet "https://github.com/Pennyw0rth/NetExec" "./TEMPREPO" >/dev/null 2>&1 && \
    git --git-dir="./TEMPREPO/.git" --no-pager log -1 --pretty=format:'HEAD-%h-%cd' --date=format:'%y%m%dT%H%M%S' && \
    [ -d "$(realpath .)/TEMPREPO" ] && rm -rf "$(realpath .)" >/dev/null 2>&1 && popd >/dev/null 2>&1
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "debian-builder-unstable" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/debian-builder-unstable:$(uname -m)" \
      bash -l -c '
      #Setup ENV
       set -x ; chown -R "$(whoami):$(whoami)" "/tmp" 2>/dev/null ; chmod -v '1777' '/tmp'
       mkdir -p "/build-bins" && pushd "$(mktemp -d)" >/dev/null 2>&1
       apt clean -y ; apt update -y -qq 2>/dev/null
       apt update -y -qq
      #CoreUtils
       apt install bash binutils coreutils curl findutils file g++ git grep jq libc-dev moreutils patchelf rsync sed strace tar tree xz-utils zstd -y -qq 2>/dev/null
      #Sharun
       curl -w "(DL) <== %{url}\n" -qfSL "https://github.com/VHSgunzo/sharun/releases/latest/download/sharun-$(uname -m)-aio" -o "/usr/local/bin/sharun"
       chmod -v "a+x" "/usr/local/bin/sharun"
       command -v sharun &>/dev/null || echo -e "\n[X] FATAL: sharun is NOT Installed\n$(exit 1)"             
      #Build: https://github.com/Pennyw0rth/NetExec/blob/main/Dockerfile
       apt-get update -y -qq
       apt-get install -y -qq libffi-dev libxml2-dev libxslt-dev libssl-dev openssl autoconf g++ python3-dev curl git
       apt-get update -y -qq
       git clone --quiet --filter "blob:none" "https://github.com/Pennyw0rth/NetExec" && cd "./NetExec"
       pip install . --break-system-packages --force-reinstall --upgrade --ignore-installed #--root-user-action
       #https://github.com/Pennyw0rth/NetExec/blob/main/netexec.spec
       sed "s/upx=True/upx=False/" -i "./netexec.spec"
       pyinstaller --clean "./netexec.spec" --noconfirm
       mv -fv "./dist/nxc" "./dist/netexec" 2>/dev/null
       find -L "./dist" -maxdepth 1 -type f 2>/dev/null
       find "./dist" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable" | cut -d":" -f1 | xargs realpath | xargs -I "{}" sharun lib4bin --gen-lib-path --strace-mode --strace-time "60" --with-hooks --with-wrappe --wrappe-clvl "22" --wrappe-exec "$(basename "{}")" --dst-dir "./SHARUN_WRAPPED" "{}"
      #Copy
       find "./SHARUN_WRAPPED" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" cp -fv "{}" "/build-bins/"
       ( askalono --format "json" crawl --follow "$(realpath .)" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/LICENSE" ) 2>/dev/null
      #Info
       file "/build-bins/"* && du -sh "/build-bins/"*
       popd >/dev/null 2>&1
      '
    #Copy & Meta
     docker cp "debian-builder-unstable:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"
    #Fetch Upstream Version
     curl -qfsSL "https://api.gh.pkgforge.dev/repos/Pennyw0rth/NetExec/releases?per_page=100" | jq -r '[.[] | select(.draft == false and .prerelease == false)] | .[0].tag_name | gsub("\\s+"; "")' | tr -d '"'\''[:space:]' > "${SBUILD_TMPDIR}/upstream.version"