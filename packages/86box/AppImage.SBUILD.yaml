#!/SBUILD ver @v0.4.5
#SELF: 
_disabled: false

pkg: "86box"
pkg_id: "net._86box._86Box"
pkg_type: "AppImage"
build_util:
  - "curl"
  - "eget"
  - "rsync"
category:
  - "Emulator"
description: "Emulator of x86-based machines"
distro_pkg:
  archlinux:
    aur:
      - "86box"
      - "86box-appimage"
      - "86box-git"
  nixpkgs:
    - "86Box"
homepage:
  - "https://86box.net"
  - "https://86box.readthedocs.io"
icon: "https://raw.githubusercontent.com/Azathothas/soarpkgs/refs/heads/main/assets/icons/86box.png"
license:
  - "GPL-2+"
  - "GPL-2.0"
  - "GPL-2.0-only"
  - "GPL-2.0-or-later"
  - "GPL2"
  - "GPLv3"
  - "Unfree"
  - "spdx:GPL-2.0-or-later"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
 - "Officially Created AppImage. Check/Report @ https://github.com/86Box/86Box"
 - "You need to download ROMS: https://86box.readthedocs.io/en/latest/usage/roms.html"
repology:
 - "86box"
src_url: "https://github.com/86Box/86Box"
tag:
  - "app-emulation"
  - "emulators"
  - "game"
  - "system"
x_exec:
  shell: bash
  run: |
    case "$(uname -m)" in
      aarch64)
        timeout 3m eget "https://github.com/86Box/86Box" --asset "AppImage" --asset "^x64" --asset "^x86" --asset "^.zsync" --to "./${pkg}" && chmod +x "./${pkg}"
        ;;
      x86_64)
        timeout 3m eget "https://github.com/86Box/86Box" --asset "AppImage" --asset "^aarch64" --asset "^arm" --asset "^.zsync" --to "./${pkg}" && chmod +x "./${pkg}"
        ;;
    esac
    pkgforger fetch "./${pkg}" --desktop --regexp "${pkg}" --output "./${pkg}.desktop"
    pkgforger fetch "./${pkg}" --icon --regexp "${pkg}" --output "./.DirIcon" && cp "./.DirIcon" "./${pkg}.png"
    sed -E 's/\s+setup\s+/ /Ig' -i "./${pkg}.desktop"
    sed "s/Icon=[^ ]*/Icon=${pkg}/" -i "./${pkg}.desktop"
    curl -qfsSL "https://api.github.com/repos/86Box/86Box/releases/latest" | jq -r '.tag_name' > "./${pkg}.version"
    if [[ -s "./${pkg}" && $(stat -c%s "./${pkg}") -gt 1024 ]] && \
       [[ -s "./${pkg}.desktop" && $(stat -c%s "./${pkg}.desktop") -gt 3 ]] && \
       [[ -s "./.DirIcon" && $(stat -c%s "./.DirIcon") -gt 1024 ]] && \
       [[ -s "./${pkg}.png" && $(stat -c%s "./${pkg}.png") -gt 1024 ]] && \
       [[ -s "./${pkg}.version" && $(stat -c%s "./${pkg}.version") -gt 3 ]]; then
      echo "All files exist"
    else
       echo "One or more files are missing or less than 1KB."
    fi
