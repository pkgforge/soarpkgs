##Needs daemon running as root

#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/packages/teamviewer-host/archive.wrappe.stable.yaml
_disabled: false

pkg: "teamviewer-host"
pkg_id: "wrappe.teamviewer-host"
pkg_type: "archive"
app_id: "com.teamviewer.TeamViewer-Host"
category:
  - "Utility"
description: "For Unattended TeamViewer Access (Host)"
desktop:
  url: "https://raw.githubusercontent.com/pkgforge/soarpkgs/main/packages/teamviewer-host/assets/default.desktop"
distro_pkg:
  homebrew:
    - "teamviewer-host"
homepage:
  - "https://www.teamviewer.com"
icon:
  url: "https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/packages/teamviewer-host/assets/default.png"
license:
  - "freeware"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Source Bundle fetched from Upstream. Check/Report @ https://github.com/teamviewer/Launcher"
  - "Packed as-is using WrapPe. Check/Report @ https://github.com/Systemcluster/wrappe"
  - "Learn more @ https://docs.pkgforge.dev/formats/packages/archive"
  - "Host Dependencies: A lot, please use soar log to view the ldd output"
  - "You might need to install libminizip"
provides:
  - "teamviewer-host" 
repology:
  - "teamviewer-host"
src_url:
  - "https://www.teamviewer.com/en-us/download/linux/"
tag:
  - "Remote"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://www.teamviewer.com/en-us/download/linux/" | grep -iA5 'download' |\
     grep -oP '\d+\.\d+\.\d+(\.\d+)*' | sort --version-sort | tail -n 1 | tr -cd '0-9a-zA-Z.-_' | tr -d '"'\''[:space:]'
  run: |
    #Get Wrappe
     curl -qfsSL "https://bin.pkgforge.dev/$(uname -m)-$(uname -s)/wrappe" -o "${SBUILD_TMPDIR}/wrappe"
     chmod -v 'a+x' "${SBUILD_TMPDIR}/wrappe"
     [[ -s "${SBUILD_TMPDIR}/wrappe" ]] || exit 1
    #Get Bundle 
     case "$(uname -m)" in
       aarch64)
         DOWNLOAD_URL="$(curl -qfsSL "https://www.teamviewer.com/en-us/download/linux/" | grep -o 'href="[^"]*"' |\
           sed 's/href="//' | sed 's/"$//' | grep -i 'download' | grep -i 'linux' | grep -i 'http' |\
           grep -Eiv 'amd64|armhf|armv7|deb|i686|rpm|x86_64' | grep -i 'host' | grep -Ei 'aarch64|arm64' | sort --version-sort |\
           tail -n 1 | tr -d '"'\''[:space:]')"
         curl -w "(DL) <== %{url}\n" -qfSL "${DOWNLOAD_URL}" -o "${SBUILD_TMPDIR}/${PKG}.archive"
         file "${SBUILD_TMPDIR}/${PKG}.archive"
         ;;
       x86_64)
         DOWNLOAD_URL="$(curl -qfsSL "https://www.teamviewer.com/en-us/download/linux/" | grep -o 'href="[^"]*"' |\
           sed 's/href="//' | sed 's/"$//' | grep -i 'download' | grep -i 'linux' | grep -i 'http' |\
           grep -Eiv 'aarch64|arm|deb|i686|rpm' | grep -i 'host' | grep -Ei 'amd64|x86_64' | sort --version-sort |\
           tail -n 1 | tr -d '"'\''[:space:]')"
         curl -w "(DL) <== %{url}\n" -qfSL "${DOWNLOAD_URL}" -o "${SBUILD_TMPDIR}/${PKG}.archive"
         file "${SBUILD_TMPDIR}/${PKG}.archive"
         ;;
     esac
    #Extract
     [[ -s "${SBUILD_TMPDIR}/${PKG}.archive" ]] || exit 1
     mkdir -pv "${SBUILD_TMPDIR}/BUILD_DIR" && \
     7z x -mmt="$(($(nproc)+1))" -bd -y -o"${SBUILD_TMPDIR}/BUILD_DIR" "${SBUILD_TMPDIR}/${PKG}.archive"
     find "${SBUILD_TMPDIR}/BUILD_DIR" -type f -exec tar -xvf "{}" -C "${SBUILD_TMPDIR}/BUILD_DIR" 2>/dev/null \;
     find "${SBUILD_TMPDIR}/BUILD_DIR" -maxdepth 1 -type f -exec rm -rvf "{}" 2>/dev/null \;
     EXT_DIR="$(find "${SBUILD_TMPDIR}/BUILD_DIR" -type f -printf '%h\n' | sort -u | head -n 1 | tr -d '[:space:]')"
     if [[ ! -d "${EXT_DIR}" ]] || [[ "$(du -s "${EXT_DIR}" | cut -f1)" -le 100 ]]; then
       echo -e "\n[-] FATAL: Extracted dir is empty\n"
      exit 1
     fi
     find -L "${EXT_DIR}" | sort | awk -F/ '{indent=""; for (i=2; i<NF; i++) indent=indent " "; print (NF>1 ? indent "--> " $NF : $NF)}'
    #Prep 
     sudo chown -R "$(whoami):$(whoami)" "${SBUILD_TMPDIR}" && chmod -R 755 "${SBUILD_TMPDIR}"
     echo -e "\n" && find "${EXT_DIR}" -maxdepth 3 -type f -exec file -i "{}" \; |\
      grep -Ei 'application/.*executable|text/x-perl|text/.*script' | cut -d":" -f1 | xargs realpath | sort -u |\
      xargs -I "{}" bash -c 'sudo chmod -v "a+x" "{}"; ldd "{}" 2>/dev/null ; echo -e "GLIBC" && objdump -T "{}" | grep -Ei "GLIBC(_|XX_)" | sed -E "s/.*GLIBC(_|XX_)([0-9]+[.][0-9.]*).*/\2/" | sort -uV | tail -n 1 ; echo -e "\n"'
    #Pack & Copy
     [[ -s "${EXT_DIR}/tv_bin/script/teamviewer" ]] && PKG_ENTRYPOINT="${EXT_DIR}/tv_bin/script/teamviewer"
     "${SBUILD_TMPDIR}/wrappe" --current-dir "command" --compression "22" --show-information "none" --unpack-directory ".${PKG}.wrappe" --unpack-target "cwd" "${EXT_DIR}" "${PKG_ENTRYPOINT}" "${SBUILD_OUTDIR}/${PKG}"
     [[ -s "${SBUILD_OUTDIR}/${PKG}" ]] || exit 1
     ( askalono --format "json" crawl --follow "${SBUILD_TMPDIR}/BUILD_DIR" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "${SBUILD_OUTDIR}/LICENSE" ) 2>/dev/null
    #Desktop
     if [[ ! -s "${SBUILD_OUTDIR}/${PKG}.desktop" ]]; then
       find -L "${SBUILD_TMPDIR}/BUILD_DIR" -name "*.desktop" -printf "%s %p\n" -quit | sort -n | awk 'NR==1 {print $2}' | xargs -I "{}" sh -c 'cp -fv "{}" "${SBUILD_OUTDIR}/${PKG}.desktop"'
     fi
     sed '/.*DBusActivatable.*/I d' -i "${SBUILD_OUTDIR}/${PKG}.desktop"
     sed -E 's/\s+setup\s+/ /Ig' -i "${SBUILD_OUTDIR}/${PKG}.desktop"
     sed "s/Icon=[^ ]*/Icon=${PKG}/" -i "${SBUILD_OUTDIR}/${PKG}.desktop"
    #Icon
     if [[ ! -s "${SBUILD_OUTDIR}/${PKG}.png" && ! -s "${SBUILD_OUTDIR}/${PKG}.svg" ]]; then
       find -L "${SBUILD_TMPDIR}/BUILD_DIR" -type f,l  -regex '.*\.\(png\|svg\)' \
        -not -regex '.*\(favicon\|/\(16x16\|22x22\|24x24\|32x32\|36x36\|48x48\|64x64\|72x72\|96x96\)/\).*' \
        | awk '{print length, $0}' | sort -n | awk 'NR==1 {print $2}' | xargs -I "{}" cp -fv "{}" "${SBUILD_OUTDIR}/${PKG}.png"
       if [[ ! -f "${SBUILD_OUTDIR}/${PKG}.png" || $(stat -c%s "${SBUILD_OUTDIR}/${PKG}.png") -le 3 ]]; then
        find -L "${SBUILD_TMPDIR}/BUILD_DIR" -regex ".*\(128x128/apps\|256x256\)/.*${PKG}.*\.\(png\|svg\)" -printf "%s %p\n" -quit | sort -n | awk 'NR==1 {print $2}' | xargs -I "{}" cp -fv "{}" "${SBUILD_OUTDIR}/${PKG}.png"
       fi
       cp -fv "${SBUILD_OUTDIR}/${PKG}.png" "${SBUILD_OUTDIR}/.DirIcon"
     fi