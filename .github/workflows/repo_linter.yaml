name: 🐧🧹 Repo Linter 🖳🗑️
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true
on:
  #push:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *" #every 06 hrs
  push:
    branches:
      - main
    paths:
      - 'binaries/**'
      - 'packages/**'
#------------------------------------------------------------------------------------#
jobs:
  check:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      issues: write
      
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: main
          filter: "blob:none"

      - name: Setup Env
        run: |
          ##presets
          set +x ; set +e
          #-------------#
          ##CoreUtils
          sudo apt update -y
          sudo apt install bc coreutils curl dos2unix fdupes jq moreutils wget -y
          sudo apt-get install apt-transport-https apt-utils ca-certificates coreutils dos2unix gnupg2 jq moreutils p7zip-full rename rsync software-properties-common texinfo tmux util-linux wget -y 2>/dev/null ; sudo apt-get update -y 2>/dev/null
          #binutils
          sudo apt install binutils-aarch64-linux-gnu -y
          #libguestfs-tools
          sudo apt install libguestfs-tools -y
          #qemu
          sudo apt install qemu qemu-user-static qemu-utils -y
          ##qsv: https://github.com/dathere/qsv/tree/master?tab=readme-ov-file#option-2-package-managers--distributions
          #wget -O - https://dathere.github.io/qsv-deb-releases/qsv-deb.gpg | sudo gpg --dearmor -o /usr/share/keyrings/qsv-deb.gpg
          #echo "deb [signed-by=/usr/share/keyrings/qsv-deb.gpg] https://dathere.github.io/qsv-deb-releases ./" | sudo tee "/etc/apt/sources.list.d/qsv.list"
          #sudo apt update -y -qq
          #sudo apt install qsv -y -qq
          #temp
          SYSTMP="$(dirname $(mktemp -u))" && export SYSTMP="${SYSTMP}"
          echo "SYSTMP=${SYSTMP}" >> "${GITHUB_ENV}"
          ##Setup GHDIRS
          mkdir -pv "${GITHUB_WORKSPACE}/main/metadata"
          ##User-Agent
          USER_AGENT="$(curl -qfsSL 'https://raw.githubusercontent.com/pkgforge/devscripts/refs/heads/main/Misc/User-Agents/ua_chrome_macos_latest.txt')" && export USER_AGENT="${USER_AGENT}"
          echo "USER_AGENT=${USER_AGENT}" >> "${GITHUB_ENV}"
        continue-on-error: true

      - name: Install Addons
        run: |
          ##presets
          set +x ; set +e
          #-------------#
          bash <(curl -qfsSL "https://raw.githubusercontent.com/pkgforge/devscripts/refs/heads/main/Linux/install_bins_curl.sh")
        continue-on-error: true

      - name: Dos2Unix Everything
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main"
          find . -type f ! -path "./.git/*" -exec dos2unix {} \; 2>/dev/null
        continue-on-error: true

      - name: ActionLint
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main"
          find ".github/workflows" -type f -name "*ml" -exec actionlint {} \;
        continue-on-error: true

      - name: Shellcheck
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main"
          find ".github" -type f -name '*.sh' -exec shellcheck --exclude="SC2261" --severity="error" "{}" \; 2>/dev/null | tee "${GITHUB_WORKSPACE}/main/.github/shellcheck.txt"
        continue-on-error: true

      - name: YamlCheck
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main"
          find "./binaries" "./packages" -type f -iregex '.*\.\(yml\|yaml\)$' -exec sh -c 'for file; do if ! yq eval "." "$file" > /dev/null 2>&1; then echo "Invalid YAML: $file"; fi; done' sh "{}" + | sort -u -o "${GITHUB_WORKSPACE}/main/.github/yamlcheck.txt"
        continue-on-error: true

      - name: Git Pull & Update
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          cd "${GITHUB_WORKSPACE}/main" && git pull origin main || git pull origin main --ff-only || git merge --no-ff -m "Merge & Sync"
        continue-on-error: true

      - name: Get DateTime & Purge files (=> 95 MB)
        run: |
          #Presets
          set +x ; set +e
          #--------------#
          UTC_TIME="$(TZ='UTC' date +'%Y-%m-%d (%I:%M:%S %p)')"
          echo "UTC_TIME=$UTC_TIME" >> $GITHUB_ENV
          #Purge
          find "${GITHUB_WORKSPACE}/main" -path "${GITHUB_WORKSPACE}/main/.git" -prune -o -type f -size +95M -exec rm -rvf "{}" + 2>/dev/null
        continue-on-error: true

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: ./main        
          commit_user_name: Azathothas
          commit_user_email: AjamX101@gmail.com
          #commit_message: "‎‎‏‏‎ ‎"
          commit_message: "✅ Linted (Repo) 🛍️"
          #push_options: '--force'
        continue-on-error: true