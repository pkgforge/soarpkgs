#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/qemu/static.ppkg.stable.yaml
_disabled: false

pkg: "qemu"
pkg_id: "ppkg.qemu"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: 
  _default: "QEMU System/User mode Emulation & Virtualization binaries"
  qemu-aarch64: "Simulate a 64-bit Arm machine [qemu]"
  qemu-aarch64_be: "Simulate a 64-bit big-endian Arm machine [qemu]"
  qemu-alpha: "Simulate a DEC Alpha machine [qemu]"
  qemu-arm: "Simulate a 32-bit Arm machine [qemu]"
  qemu-armeb: "Simulate a 32-bit big-endian Arm machine [qemu]"
  qemu-avr: "Simulate a Full System AVR 8 bit based machine [qemu]"
  qemu-bridge-helper: "QEMU Network Utility [qemu]"
  qemu-cris: "Simulate a CRIS (Code Reduced Instruction Set) machine [qemu]"
  qemu-edid: "QEMU EDID test tool [qemu]"
  qemu-hexagon: "Simulate a Qualcomm Hexagon DSP [qemu]"
  qemu-hppa: "Simulate a HP PA-RISC machine [qemu]"
  qemu-i386: "Simulate a 32-bit x86 machine [qemu]"
  qemu-img: "QEMU Disk Image utility [qemu]"
  qemu-io: "QEMU Disk exerciser [qemu]"
  qemu-loongarch64: "Simulate a 64-bit LoongArch machine [qemu]"
  qemu-m68k: "Simulate a Motorola 68000 series machine [qemu]"
  qemu-microblaze: "Simulate a Xilinx MicroBlaze big-endian machine [qemu]"
  qemu-microblazeel: "Simulate a Xilinx MicroBlaze little-endian machine [qemu]"
  qemu-mips: "Simulate a 32-bit big-endian MIPS machine [qemu]"
  qemu-mips64: "Simulate a 64-bit big-endian MIPS machin [qemu]"
  qemu-mips64el: "Simulate a 64-bit little-endian MIPS machine [qemu]"
  qemu-mipsel: "Simulate a 32-bit little-endian MIPS machine [qemu]"
  qemu-mipsn32: "Simulate a 32-bit big-endian MIPS machine with N32 ABI [qemu]"
  qemu-mipsn32el: "Simulate a 32-bit little-endian MIPS machine with N32 ABI [qemu]"
  qemu-nbd: "QEMU Disk Network Block Device Server [qemu]"
  qemu-nios2: "Simulate an Altera Nios II machine [qemu]"
  qemu-or1k: "Simulate an OpenRISC 1000 machine [qemu]"
  qemu-ppc: "Simulate a 32-bit PowerPC machine [qemu]"
  qemu-ppc64: "Simulate a 64-bit big-endian PowerPC machine [qemu]"
  qemu-ppc64le: "Simulate a 64-bit little-endian PowerPC machine [qemu]"
  qemu-pr-helper: "QEMU persistent reservation helper [qemu]"
  qemu-riscv32: "Simulate a 32-bit RISC-V machine [qemu]"
  qemu-riscv64: "Simulate a 64-bit RISC-V machine [qemu]"
  qemu-s390x: "Simulate an IBM System z machine [qemu]"
  qemu-sh4: "Simulate a SuperH SH-4 little-endian machine [qemu]"
  qemu-sh4eb: "Simulate a SuperH SH-4 big-endian machine [qemu]"
  qemu-sparc: "Simulate a 32-bit SPARC machine [qemu]"
  qemu-sparc32plus: "Simulate a 32-bit SPARC V8+ machine [qemu]"
  qemu-sparc64: "Simulate a 64-bit SPARC machine [qemu]"
  qemu-storage-daemon: "QEMU storage daemon [qemu]"
  qemu-system-aarch64: "Simulate a Full System 64-bit Arm machine"
  qemu-system-alpha: "Simulate a Full System DEC Alpha machine [qemu]"
  qemu-system-arm: "Simulate a Full System 32-bit Arm machine [qemu]"
  qemu-system-avr: "Simulate a Full System AVR 8 bit based machine [qemu]"
  qemu-system-hppa: "Simulate a Full System HP PA-RISC machine [qemu]"
  qemu-system-i386: "Simulate a Full System 32-bit x86 machine [qemu]"
  qemu-system-loongarch64: "Simulate a Full System 64-bit LoongArch machine [qemu]"
  qemu-system-m68k: "Simulate a Full System Motorola 68000 series machine [qemu]"
  qemu-system-microblaze: "Simulate a Full System Xilinx MicroBlaze big-endian machine [qemu]"
  qemu-system-microblazeel: "Simulate a Full System Xilinx MicroBlaze little-endian machine [qemu]"
  qemu-system-mips: "Simulate a Full System 32-bit big-endian MIPS machine [qemu]"
  qemu-system-mips64: "Simulate a Full System 64-bit big-endian MIPS machine [qemu]"
  qemu-system-mips64el: "Simulate a Full System 64-bit little-endian MIPS machine [qemu]"
  qemu-system-mipsel: "Simulate a Full System 32-bit little-endian MIPS machine [qemu]"
  qemu-system-or1k: "Simulate a Full System OpenRISC 1000 machine [qemu]"
  qemu-system-ppc: "Simulate a Full System 32-bit PowerPC machine [qemu]"
  qemu-system-ppc64: "Simulate a Full System 64-bit big-endian PowerPC machine [qemu]"
  qemu-system-riscv64: "Simulate a Full System 64-bit RISC-V machine [qemu]"
  qemu-system-rx: "Simulate a Full System RX target (GDB simulator) [qemu]"
  qemu-system-s390x: "Simulate a Full System IBM System z machine [qemu]"
  qemu-system-sh4: "Simulate a Full System SuperH SH-4 little-endian machine [qemu]"
  qemu-system-sh4eb: "Simulate a Full System SuperH SH-4 big-endian machine [qemu]"
  qemu-system-sparc: "Simulate a Full System 32-bit SPARC machine [qemu]"
  qemu-system-sparc64: "Simulate a Full System 64-bit SPARC machine [qemu]"
  qemu-system-tricore: "Simulate a Full System Tricore micro-controller [qemu]"
  qemu-system-x86_64: "Simulate a Full System 64-bit x86 machine [qemu]"
  qemu-system-xtensa: "Simulate a Full System Tensilica Xtensa little-endian machine [qemu]"
  qemu-system-xtensaeb: "Simulate a Full System Tensilica Xtensa big-endian machine [qemu]"
  qemu-vmsr-helper: "QEMU persistent reservation utility [qemu]"
  qemu-x86_64: "Simulate a Full System 64-bit x86 machine [qemu]"
  qemu-xtensa: "Simulate a Full System Tensilica Xtensa little-endian machine [qemu]"
  qemu-xtensaeb: "Simulate a Full System Tensilica Xtensa big-endian machine [qemu]"
distro_pkg:
  alpine:
    - "qemu"
  archlinux:
    aur:
      - "qemu-git"
    extra:
      - "qemu"
  debian:
    - "qemu"
  gnuguix:
    - "qemu"
  homebrew:
    - "qemu"
  nixpkgs:
    - "qemu"
homepage:
  - "https://www.qemu.org"
  - "https://gitlab.com/qemu-project/qemu"
  - "https://github.com/qemu/qemu"
license:
  - id: "GPL-2.0"
    url: "https://gitlab.com/qemu-project/qemu/-/raw/master/COPYING?ref_type=heads"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using ppkg. Check/Report @ https://github.com/leleliu008/ppkg-formula-repository-official-core"
provides:
  - "qemu-aarch64==qemu-aarch64-static"
  - "qemu-aarch64_be==qemu-aarch64_be-static"
  - "qemu-alpha==qemu-alpha-static"
  - "qemu-arm==qemu-arm-static"
  - "qemu-armeb==qemu-armeb-static"
  - "qemu-bridge-helper"
  - "qemu-edid"
  - "qemu-hexagon==qemu-hexagon-static"
  - "qemu-hppa==qemu-hppa-static"
  - "qemu-i386==qemu-i386-static"
  - "qemu-img"
  - "qemu-io"
  - "qemu-loongarch64==qemu-loongarch64-static"
  - "qemu-m68k==qemu-m68k-static"
  - "qemu-microblaze==qemu-microblaze-static"
  - "qemu-microblazeel==qemu-microblazeel-static"
  - "qemu-mips==qemu-mips-static"
  - "qemu-mips64==qemu-mips64-static"
  - "qemu-mips64el==qemu-mips64el-static"
  - "qemu-mipsel==qemu-mipsel-static"
  - "qemu-mipsn32==qemu-mipsn32-static"
  - "qemu-mipsn32el==qemu-mipsn32el-static"
  - "qemu-nbd"
  - "qemu-or1k==qemu-or1k-static"
  - "qemu-ppc==qemu-ppc-static"
  - "qemu-ppc64==qemu-ppc64-static"
  - "qemu-ppc64le==qemu-ppc64le-static"
  - "qemu-pr-helper"
  - "qemu-riscv32==qemu-riscv32-static"
  - "qemu-riscv64==qemu-riscv64-static"
  - "qemu-s390x==qemu-s390x-static"
  - "qemu-sh4==qemu-sh4-static"
  - "qemu-sh4eb==qemu-sh4eb-static"
  - "qemu-sparc==qemu-sparc-static"
  - "qemu-sparc32plus==qemu-sparc32plus-static"
  - "qemu-sparc64==qemu-sparc64-static"
  - "qemu-storage-daemon"
  - "qemu-system-aarch64"
  - "qemu-system-alpha"
  - "qemu-system-arm"
  - "qemu-system-avr"
  - "qemu-system-hppa"
  - "qemu-system-i386"
  - "qemu-system-loongarch64"
  - "qemu-system-m68k"
  - "qemu-system-microblaze"
  - "qemu-system-microblazeel"
  - "qemu-system-mips"
  - "qemu-system-mips64"
  - "qemu-system-mips64el"
  - "qemu-system-mipsel"
  - "qemu-system-or1k"
  - "qemu-system-ppc"
  - "qemu-system-ppc64"
  - "qemu-system-riscv32"
  - "qemu-system-riscv64"
  - "qemu-system-rx"
  - "qemu-system-s390x"
  - "qemu-system-sh4"
  - "qemu-system-sh4eb"
  - "qemu-system-sparc"
  - "qemu-system-sparc64"
  - "qemu-system-tricore"
  - "qemu-system-x86_64"
  - "qemu-system-xtensa"
  - "qemu-system-xtensaeb"
  - "qemu-vmsr-helper"
  - "qemu-x86_64==qemu-x86_64-static"
  - "qemu-xtensa==qemu-xtensa-static"
  - "qemu-xtensaeb==qemu-xtensaeb-static"
repology:
  - "qemu"
src_url:
  - "https://gitlab.com/qemu-project/qemu"
tag:
  - "emulation"
  - "qemu"
  - "virtualization"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://meta.pkgforge.dev/misc/PPKG.json" | jq -r '.[] | select(.pkg == "qemu") | .version' | tr -d '[:space:]'
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "alpine-builder" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "docker.io/alpine:edge" \
      sh -c '
      #Setup ENV
       mkdir -p "/build-bins" && cd "$(mktemp -d)" >/dev/null 2>&1
       apk update && apk upgrade --no-interactive 2>/dev/null
       apk del ninja-is-really-ninja --force --no-interactive 2>/dev/null
       apk cache clean --purge
      #CoreUtils
       apk add 7zip binutils coreutils croc curl findutils file g++ git grep jq libc-dev linux-headers moreutils rsync tar tree util-linux xz zstd --latest --upgrade --no-interactive 2>/dev/null
      #ppkg
       curl -qfsSL "https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg" -o "/usr/local/bin/ppkg"
       chmod -v "a+x" "/usr/local/bin/ppkg"
       ppkg setup
       ppkg update
       [ -d "${HOME}/.ppkg/repos.d/official-core/" ] && git -C "${HOME}/.ppkg/repos.d/official-core/" reset --hard
      #Build: https://github.com/leleliu008/ppkg-formula-repository-official-core/raw/master/formula/qemu.yml
       ppkg install "qemu" --profile="release" -j "$(($(nproc)+1))" --static
       ppkg tree "qemu" --dirsfirst -L 5
      #Copy
       PPKG_BINDIR="$(ppkg tree "qemu" --dirsfirst -L 1 | grep -o "/.*/.*" 2>/dev/null | tail -n1 | xargs realpath | tr -d "[:space:]")"
       echo "${PPKG_BINDIR}" | grep -qi "ppkg" && [ -d "${PPKG_BINDIR}" ] || exit 1
       rsync -achLv --exclude="*/" "${PPKG_BINDIR}/bin/." "/build-bins/." 2>/dev/null
       rsync -achLv --exclude="*/" "${PPKG_BINDIR}/libexec/." "/build-bins/." 2>/dev/null
       rsync -achLv --exclude="*/" "${PPKG_BINDIR}/sbin/." "/build-bins/." 2>/dev/null
      #strip & info
       find "/build-bins/" -type f -exec objcopy --remove-section=".comment" --remove-section=".note.*" "{}" \;
       find "/build-bins/" -type f ! -name "*.no_strip" -exec strip --strip-debug --strip-dwo --strip-unneeded "{}" \; >/dev/null 2>&1
       file "/build-bins/"* && du -sh "/build-bins/"*
      '
    #Copy & Meta
     docker cp "alpine-builder:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei 'application/.*executable|text/x-perl|text/.*script' | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"