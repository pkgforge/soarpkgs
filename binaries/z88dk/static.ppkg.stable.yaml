#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/z88dk/static.ppkg.stable.yaml
_disabled: false

pkg: "z88dk"
pkg_id: "ppkg.z88dk"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: 
  _default: "Complete Z80/Z180 development kit"
  z80asm: "An assembler for Z80 assembly [z88dk]"
  z88dk-appmake: "Process raw binaries generated into specific target machine executables [z88dk]"
  z88dk-asmpp: "z88dk/z80 Macro Assembler [z88dk]"
  z88dk-asmstyle: "Beautify asm code [z88dk]"
  z88dk-basck: "ROM Basic analyzer [z88dk]"
  z88dk-copt: "Regex engine used by z88dk-sccz80 and z88dk-zsdcc [z88dk]"
  z88dk-dis: "Disassembler for 8080, 8085, GBZ80, Z80, Z180, Z80N, EZ80, R800 and Rabbit 2000/3000 [z88dk]"
  z88dk-dzx0: "PC-side decompressor counterparties to the z88dk-zx0 [z88dk]"
  z88dk-dzx7: "PC-side decompressor counterparties to the z88dk-zx7 [z88dk]"
  z88dk-font2pv1000: "Convert a standard z88dk/ZX font into a format suitable for the PV-1000 [z88dk]"
  z88dk-gdb: "Debugger interface for Z80/Z180 [z88dk]"
  z88dk-lib: "Installer for third party libraries [z88dk]"
  z88dk-sccz80: "z88dk's Native C Compiler [z88dk]"
  z88dk-ticks: "Emulator used to time execution speed of code fragments [z88dk]"
  z88dk-ucpp: "C preprocessor invoked for sccz80 and for zsdcc [z88dk]"
  z88dk-z80asm: "Fully featured Assembler, Linker & Librarian [z88dk]"
  z88dk-z80nm: "z80asm's companion archiver [z88dk]"
  z88dk-z80svg: "Translate an SVG vector file in a C source data [z88dk]"
  z88dk-zobjcopy: "Manipulate z80asm object files [z88dk]"
  z88dk-zpragma: "Process pragmas embedded in c source [z88dk]"
  z88dk-zsdcc: "z88dk's customization of the sdcc compiler [z88dk]"
  z88dk-zx0: "Optimal LZ77/LZSS compression [z88dk]"
  z88dk-zx7: "Optimal LZ77/LZSS compression (Superseded by zx0) [z88dk]"
  zcc: "Generate an output binary out of any set of input source files [z88dk]"
distro_pkg:
  archlinux:
    aur:
      - "z88dk"
      - "z88dk-git"
  nixpkgs:
    - "z88dk"
homepage:
  - "https://z88dk.org/site/"
license:
  - id: "ClArtistic"
    url: "https://github.com/z88dk/z88dk/raw/bc08a50c6462cba58e55113dda9ec1e2cf7b5041/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using ppkg. Check/Report @ https://github.com/leleliu008/ppkg-formula-repository-official-core"
provides:
  - "z80asm"
  - "z88dk-appmake"
  - "z88dk-asmpp"
  - "z88dk-asmstyle"
  - "z88dk-basck"
  - "z88dk-copt"
  - "z88dk-dis"
  - "z88dk-dzx0"
  - "z88dk-dzx7"
  - "z88dk-font2pv1000"
  - "z88dk-gdb"
  - "z88dk-lib"
  - "z88dk-sccz80"
  - "z88dk-ticks"
  - "z88dk-ucpp"
  - "z88dk-z80asm"
  - "z88dk-z80nm"
  - "z88dk-z80svg"
  - "z88dk-zobjcopy"
  - "z88dk-zpragma"
  - "z88dk-zx0"
  - "z88dk-zx7"
  - "zcc"  
repology:
  - "z88dk"
src_url:
  - "https://github.com/z88dk/z88dk"
tag:
  - "compiler"
  - "toolchain"
  - "z180"
  - "z80"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://meta.pkgforge.dev/misc/PPKG.json" | jq -r '.[] | select(.pkg == "z88dk") | .version' | tr -d '[:space:]'
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "alpine-builder" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "docker.io/alpine:edge" \
      sh -c '
      #Setup ENV
       mkdir -p "/build-bins" && cd "$(mktemp -d)" >/dev/null 2>&1
       apk update && apk upgrade --no-interactive 2>/dev/null
       apk del ninja-is-really-ninja --force --no-interactive 2>/dev/null
       apk cache clean --purge
      #CoreUtils
       apk add 7zip binutils coreutils croc curl findutils file g++ git grep jq libc-dev linux-headers moreutils rsync tar tree util-linux xz zstd --latest --upgrade --no-interactive 2>/dev/null
      #ppkg
       curl -qfsSL "https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg" -o "/usr/local/bin/ppkg"
       chmod -v "a+x" "/usr/local/bin/ppkg"
       ppkg setup --syspm
       ppkg update
       [ -d "${HOME}/.ppkg/repos.d/official-core/" ] && git -C "${HOME}/.ppkg/repos.d/official-core/" reset --hard
      #Build: https://github.com/leleliu008/ppkg-formula-repository-official-core/raw/master/formula/z88dk.yml
       ppkg install "z88dk" --profile="release" -j "$(($(nproc)+1))" --static
       ppkg tree "z88dk" --dirsfirst -L 5
      #Copy
       PPKG_BINDIR="$(ppkg tree "z88dk" --dirsfirst -L 1 | grep -o "/.*/.*" 2>/dev/null | tail -n1 | xargs realpath | tr -d '[:space:]')"
       echo "${PPKG_BINDIR}" | grep -qi "ppkg" && [ -d "${PPKG_BINDIR}" ] || exit 1
       rsync -achLv --exclude="*/" "${PPKG_BINDIR}/bin/." "/build-bins/." 2>/dev/null
       rsync -achLv --exclude="*/" "${PPKG_BINDIR}/libexec/." "/build-bins/." 2>/dev/null
       rsync -achLv --exclude="*/" "${PPKG_BINDIR}/sbin/." "/build-bins/." 2>/dev/null
      #strip & info
       find "/build-bins/" -type f -exec objcopy --remove-section=".comment" --remove-section=".note.*" "{}" \;
       find "/build-bins/" -type f ! -name "*.no_strip" -exec strip --strip-debug --strip-dwo --strip-unneeded "{}" \; >/dev/null 2>&1
       file "/build-bins/"* && du -sh "/build-bins/"*
      '
    #Copy & Meta
     docker cp "alpine-builder:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"