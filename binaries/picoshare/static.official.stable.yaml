#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/picoshare/static.official.stable.yaml
_disabled: false

pkg: "picoshare"
pkg_id: "github.com.mtlynch.picoshare.stable"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: "A minimalist, easy-to-host service for sharing images and other files"
homepage:
  - "https://github.com/mtlynch/picoshare"
license:
  - id: "AGPL-3.0"
    url: "https://github.com/mtlynch/picoshare/raw/2276695499d4be494d54b8ff4f52b4d28841978f/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Pre Built Binary Fetched from Upstream. Check/Report @ https://github.com/mtlynch/picoshare"
provides:
  - "picoshare"  
#repology:
#  - "picoshare"
src_url:
  - "https://github.com/mtlynch/picoshare"
tag:
  - "Utility"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://api.gh.pkgforge.dev/repos/mtlynch/picoshare/releases?per_page=100" | jq -r '[.[] | select(.draft == false and .prerelease == false)] | .[0].tag_name | gsub("\\s+"; "")' | tr -d '"'\''[:space:]'
  run: |
    #Download
    case "$(uname -m)" in
      aarch64)
        soar dl "https://github.com/mtlynch/picoshare@${PKGVER}" --match "linux,arm64" --exclude "amd64,x86,x64,sha256,sha512,sig,bsd,macos,windows" -o "${SBUILD_TMPDIR}/${PKG}.archive" --yes
        ;;
      x86_64)
        soar dl "https://github.com/mtlynch/picoshare@${PKGVER}" --match "linux,amd64" --exclude "aarch,arm,i386,i686,sha256,sha512,sig,bsd,macos,windows" -o "${SBUILD_TMPDIR}/${PKG}.archive" --yes
        ;;
    esac
    #Extract
    while E_X=$(find "${SBUILD_TMPDIR}" -type f -exec file -i "{}" + | 
     grep -Ei "archive|compressed|gzip|x-compress|x-tar" |
     grep -iv "application/.*executable" |
     cut -d: -f1 | head -n1); [ -n "${E_X}" ]
     do
       7z e "${E_X}" -o"${SBUILD_TMPDIR}/." -y && {
        file -i "${E_X}" | grep -q "application/.*executable" && break
        rm -f "${E_X}"
       } || break
     done
    #Copy
    find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}/${PKG}"