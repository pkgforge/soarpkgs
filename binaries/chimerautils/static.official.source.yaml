#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/chimerautils/static.official.source.yaml
_disabled: false

pkg: "chimerautils"
pkg_id: "github.com.chimera-linux.chimerautils"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: #https://github.com/chimera-linux/chimerautils/blob/master/import-src.sh#L71
  _default: "Chimera Linux userland Tools"
  addpart: "Tell the kernel about the existence of a specified partition [chimerautils]"
  apply: "Apply a command to a set of arguments [chimerautils]"
  arch: "Print system architecture [chimerautils]"
  awk: "Pattern scanning and text processing language for extracting and transforming data [chimerautils]"
  basename: "Strip directory path and .SUFFIX from FILE [chimerautils]"
  bc: "An arbitrary precision calculator language [chimerautils]"
  bintrans: "A Dynamic Binary Translator [chimerautils]"
  cat: "Concatenate FILE(s) and print them to stdout [chimerautils]"
  chmod: "Change the permissions of a file or directory [chimerautils]"
  chown: "Change the owner and/or group of each FILE to OWNER and/or GROUP [chimerautils]"
  chroot: "Run PROG with root directory set to NEWROOT [chimerautils]"
  cksum: "Calculate the CRC32 checksums of FILES [chimerautils]"
  colrm: "Remove columns from a file [chimerautils]"
  column: "Format input into multiple columns [chimerautils]"
  clear: "Clear screen [chimerautils]"
  comm: "Compare FILE1 to FILE2, or to stdin if - is specified [chimerautils]"
  compress: "Reduces the size of files [chimerautils]"
  cp: "Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY [chimerautils]"
  csplit: "Split file into pieces [chimerautils]"
  ctrlaltdel: "Set the function of the Ctrl-Alt-Del combination [chimerautils]"  
  cut: "Print selected fields from each input FILE to standard output [chimerautils]"
  date: "Display time (using +FMT), or set time [chimerautils]"
  dd: "Copy a file with converting and formatting [chimerautils]"
  delpart: "Tell the kernel to forget about a partition [chimerautils]"
  df: "Print filesystem usage statistics [chimerautils]"
  diff: "Compare files line by line and output the differences between them [chimerautils]"
  diff3: "Compare files line by line and output the differences between them [chimerautils]"
  dirname: "Strip non-directory suffix from FILENAME [chimerautils]"
  du: "Summarize disk space used for each FILE and/or directory [chimerautils]"
  echo: "Print the specified ARGs to stdout [chimerautils]"
  ed: "A line-oriented text editor [chimerautils]"
  env: "Print the current environment or run PROG after setting up the specified environment [chimerautils]"
  expand: "Convert tabs to spaces, writing to standard output [chimerautils]"
  expr: "Print the value of EXPRESSION to standard output [chimerautils]"
  factor: "Factor a number into its prime factors [chimerautils]"
  fallocate: "Preallocate space to a file [chimerautils]"
  "false": "Return an exit code of FALSE (1) [chimerautils]"
  flock: "Utilize serialization using file locks [chimerautils]"
  fmt: "Simple text formatter [chimerautils]"
  fold: "Wrap input lines in each FILE (standard input by default), writing to standard output [chimerautils]"
  fsfreeze: "Suspend access to a filesystem [chimerautils]"
  gencat: "NLS catalog compiler [chimerautils]"
  getopt: "Parse command options [chimerautils]"
  grep: "Search for PATTERN in each FILE or standard input [chimerautils]"
  head: "Print first N lines of each FILE to standard output [chimerautils]"
  hostid: "Print out a unique 32-bit identifier for the machine [chimerautils]"
  hostname: "Get or set hostname or DNS domain name [chimerautils]"
  id: "Print information about USER or the current user [chimerautils]"
  ionice: "Change I/O scheduling class and priority [chimerautils]"
  isosize: "Output the length of an iso9660 filesystem in a specified file [chimerautils]"
  join: "Relational database operator [chimerautils]"
  jot: "Print sequential or random data [chimerautils]"
  ln: "Create a link LINK or DIRECTORY/TARGET to the specified TARGET(s) [chimerautils]"
  locate: "Search a database for all pathnames which match the specified pattern [chimerautils]"
  logger: "Write MESSAGE to the system log [chimerautils]"
  logname: "Print the name of the current user [chimerautils]"
  m4: "Macro language processor [chimerautils]"
  mcookie: "Print the name of the current user [chimerautils]"
  md5: "Print or check MD5 checksums [chimerautils]"
  md5sum: "Print or check MD5 checksums [chimerautils]"
  mdev: "A minimal device manager for Linux [chimerautils]"
  mesg: "Control write access to your terminal [chimerautils]"
  mkdir: "Create DIRECTORY [chimerautils]"
  mkfifo: "Create named pipe (identical to 'mknod name p') [chimerautils]"
  mknod: "Create a special file (block, character, or pipe) [chimerautils]"
  mktemp: "Create a temporary file with name based on TEMPLATE and print its name [chimerautils]"
  mv: "Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY [chimerautils]"
  nc: "Netcat, a tool for network connections [chimerautils]"
  netcat: "Netcat, a tool for network connections [chimerautils]"
  nice: "Run PROG with modified scheduling priority [chimerautils]"
  nl: "Number lines of input [chimerautils]"
  nohup: "Run PROG immune to hangups, with output to a non-tty [chimerautils]"
  nproc: "Print the number of processing units available [chimerautils]"
  paste: "Concatenate and paste lines from files [chimerautils]"
  patch: "Apply patches to files [chimerautils]"
  pathchk: "check pathnames [chimerautils]"
  pivot_root: "Move the current root file system to PUT_OLD and make NEW_ROOT the new root file system [chimerautils]"
  printenv: "Print all or part of environment [chimerautils]"
  printf: "Format and print ARGUMENT(s) according to FORMAT [chimerautils]"
  pwd: "Print the full filename of the current working directory [chimerautils]"
  realpath: "Return the absolute pathnames of given argument [chimerautils]"
  renice: "Change priority of running processes [chimerautils]"
  resizepart: "Resize a Partition [chimerautils]"
  rev: "Reverse lines of input [chimerautils]"
  rm: "Remove (unlink) the FILE(s) [chimerautils]"
  rmdir: "Remove the DIRECTORY [chimerautils]"
  sed: "Stream editor for filtering and transforming text [chimerautils]"
  seq: "Print numbers from FIRST to LAST, in steps of IN [chimerautils]"
  setarch: "Change reported architecture for program [chimerautils]"
  setsid: "Run PROG in a new session [chimerautils]"
  sh: "The ASH Shell [chimerautils]"
  shar: "Create a shell archive of files [chimerautils]"
  sleep: "Pause for a time [chimerautils]"
  sort: "Sort lines of text [chimerautils]"
  stat: "Display file (default) or filesystem status [chimerautils]"
  stdbuf: "Change standard streams initial buffering [chimerautils]"
  stty: "Without arguments, prints baud rate, line discipline, and deviations from stty sane [chimerautils]"
  switch_root: "Free initramfs and switch to another root fs [chimerautils]"
  sync: "Write all buffered blocks to disk [chimerautils]"
  tee: "Copy standard input to each FILE, and also to standard output [chimerautils]"
  test: "Condition evaluation utility [chimerautils]"
  time: "Run PROG. When it finishes, its resource usage is displayed [chimerautils]"
  timeout: "Runs PROG. Sends SIG to it if it is not gone in SECS seconds [chimerautils]"
  tip: "Connect to a remote system [chimerautils]"
  touch: "Update the last-modified date on the given FILE[s] [chimerautils]"
  tr: "Translate, squeeze, and/or delete characters from standard input, writing to standard output [chimerautils]"
  "true": "Return an exit code of TRUE (0) [chimerautils]"
  truncate: "Shrink or extend the size of a file [chimerautils]"
  tsort: "Perform a topological sort [chimerautils]"
  tty: "Print file name of standard input's terminal [chimerautils]"
  ul: "Convert underscores in text to terminal-specific underline sequences [chimerautils]"
  uname: "Print system information [chimerautils]"
  uncompress: "Uncompress .Z file[s] [chimerautils]"
  unexpand: "Convert spaces to tabs, writing to standard output [chimerautils]"
  uniq: "Discard duplicate lines [chimerautils]"
  unvis: "Decode characters previously encoded by vis [chimerautils]"
  users: "List the usernames of currently logged-in users [chimerautils]"
  vis: "Display non-printable characters in a visual format [chimerautils]"
  wc: "Print line, word, and byte counts for each FILE [chimerautils]"
  whereis: "Locate programs [chimerautils]"
  which: "Locate a COMMAND [chimerautils]"
  who: "Show who is logged on [chimerautils]"
  xinstall: "Install files [chimerautils]"
  xtest: "Condition evaluation utility [chimerautils]"
  yes: "Repeatedly output a line with STRING, or 'y' [chimerautils]"
homepage:
  - "https://github.com/chimera-linux/chimerautils"
license:
  - id: "BSD-3-Clause"
    url: "https://github.com/chimera-linux/chimerautils/raw/183eaba4e0946a0ab099935ca014ecbce1d21405/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built From Source (Latest Git HEAD). Check/Report @ https://github.com/chimera-linux/chimerautils"
provides:
  - "addpart"
  - "apply"
  - "arch"
  - "awk"
  - "basename"
  - "bc"
  - "bigram"
  - "bintrans"
  - "calendar"
  - "cat"
  - "chmod"
  - "chown"
  - "chroot"
  - "cksum"
  - "cmp"
  - "code"
  - "col"
  - "colrm"
  - "column"
  - "comm"
  - "compress"
  - "cp"
  - "csplit"
  - "ctrlaltdel"
  - "cut"
  - "date"
  - "dc"
  - "dd"
  - "delpart"
  - "df"
  - "diff"
  - "diff3"
  - "dirname"
  - "du"
  - "echo"
  - "ed"
  - "ee"
  - "env"
  - "expand"
  - "expr"
  - "factor"
  - "fallocate"
  - "false"
  - "fetch"
  - "find"
  - "flock"
  - "fmt"
  - "fold"
  - "fsfreeze"
  - "gencat"
  - "getopt"
  - "grep"
  - "gzip"
  - "head"
  - "hexdump"
  - "hostid"
  - "hostname"
  - "id"
  - "ionice"
  - "isosize"
  - "join"
  - "jot"
  - "kill"
  - "ln"
  - "locate"
  - "logger"
  - "logname"
  - "look"
  - "ls"
  - "m4"
  - "maketab"
  - "mcookie"
  - "md5"
  - "mesg"
  - "mkdir"
  - "mkfifo"
  - "mknod"
  - "mknodes"
  - "mksyntax"
  - "mktemp"
  - "mv"
  - "ncal"
  - "netcat"
  - "nice"
  - "nl"
  - "nohup"
  - "nproc"
  - "nvi"
  - "paste"
  - "patch"
  - "pathchk"
  - "pivot_root"
  - "pr"
  - "printenv"
  - "printf"
  - "pwd"
  - "realpath"
  - "renice"
  - "resizepart"
  - "rev"
  - "rm"
  - "rmdir"
  - "script"
  - "sdiff"
  - "sed"
  - "seq"
  - "setarch"
  - "setsid"
  - "sh"
  - "shar"
  - "sleep"
  - "sort"
  - "split"
  - "stat"
  - "stdbuf"
  - "stty"
  - "su"
  - "switch_root"
  - "sync"
  - "tail"
  - "taskset"
  - "tee"
  - "telnet"
  - "test"
  - "time"
  - "timeout"
  - "tip"
  - "touch"
  - "tr"
  - "true"
  - "truncate"
  - "tsort"
  - "tty"
  - "ul"
  - "uname"
  - "unexpand"
  - "uniq"
  - "unvis"
  - "users"
  - "vis"
  - "wall"
  - "wc"
  - "whereis"
  - "which"
  - "who"
  - "write"
  - "xargs"
  - "xinstall"
  - "xtest"
  - "yes"
repology:
  - "chimerautils"
src_url:
  - "https://github.com/chimera-linux/chimerautils"
tag:
  - "busybox"
  - "coreutils"
  - "toybox"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    pushd "$(mktemp -d)" >/dev/null 2>&1 && \
    git clone --depth="1" --filter="blob:none" --no-checkout --single-branch --quiet "https://github.com/chimera-linux/chimerautils" "./TEMPREPO" >/dev/null 2>&1 && \
    git --git-dir="./TEMPREPO/.git" --no-pager log -1 --pretty=format:'HEAD-%h-%cd' --date=format:'%y%m%dT%H%M%S' && \
    [ -d "$(realpath .)/TEMPREPO" ] && rm -rf "$(realpath .)" >/dev/null 2>&1 && popd >/dev/null 2>&1
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "alpine-builder" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/alpine-builder:latest" \
      bash -l -c '
      #Setup ENV
       set -x ; mkdir -p "/build-bins" && pushd "$(mktemp -d)" >/dev/null 2>&1
      #Build
       git clone --filter "blob:none" --depth="1" --quiet "https://github.com/chimera-linux/chimerautils" "./TEMPREPO" && cd "./TEMPREPO"
       export CC="clang"
       export CXX="clang++"
       export CFLAGS="-Os -flto=auto -fuse-ld=$(which mold) -g0 -pipe -static -static-pie -v -w -Wno-error"
       export CPPFLAGS="${CFLAGS}"
       export CXXFLAGS="${CFLAGS}"
       export LD="$(which mold)"
       export LDFLAGS="-static -static-pie -Wl,--Bstatic,--build-id=none,--no-dynamic-linker,--no-fatal-warnings,--static,--stats,--strip-all,-z,noexecstack,-z,pack-relative-relocs,-z,relro"
       #Deps
       apk add libxo --repository="https://dl-cdn.alpinelinux.org/alpine/edge/testing" --latest --upgrade --no-interactive 2>/dev/null
       apk add libxo-dev --repository="https://dl-cdn.alpinelinux.org/alpine/edge/testing" --latest --upgrade --no-interactive 2>/dev/null
       find "." -name "meson.build" -exec sed "s/shared_module/static_library/" -i "{}" \;
       meson setup --buildtype="release" \
            --default-library="static" \
            -Db_lto="true" \
            -Db_pie="true" \
            -Db_staticpic="true" \
            -Dc_args="${CFLAGS}" \
            -Dcpp_args="${CFLAGS}" \
            -Dc_link_args="${LDFLAGS}" \
            -Dcpp_link_args="${LDFLAGS}" \
            -Dinstall-lib="false" \
            -Dpam="disabled" \
            -Dselinux="disabled" \
            -Dtiny="enabled" \
            --prefer-static --strip --reconfigure --wipe --clearcache "./STATIC_BUILD" "./"
       ninja -C "./STATIC_BUILD" -j "$(($(nproc)+1))" -k "20" install all
       find "./STATIC_BUILD" -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" sh -c '\''echo "File: {}"; readelf -p ".comment" "{}"'\''
      #Copy
       find "./STATIC_BUILD" -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" cp -fv "{}" "/build-bins/"
       ( askalono --format "json" crawl --follow "$(realpath .)" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/LICENSE" ) 2>/dev/null
      #strip & info
       find "/build-bins/" -type f -exec objcopy --remove-section=".comment" --remove-section=".note.*" "{}" \;
       find "/build-bins/" -type f ! -name "*.no_strip" -exec strip --strip-debug --strip-dwo --strip-unneeded "{}" \; >/dev/null 2>&1
       file "/build-bins/"* && du -sh "/build-bins/"*
       popd >/dev/null 2>&1
      '
    #Copy & Meta
     docker cp "alpine-builder:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"