#!/SBUILD ver @v1.0.0    
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/a-utils/static.official.stable.yaml
_disabled: false

pkg: "a-utils"
pkg_id: "github.com.xplshn.a-utils"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description:
  _default: "Core Utilities of https://github.com/xplshn/Andes"
  a-utils: "Multicall Binary with All Core Utilities of https://github.com/xplshn/Andes"
  cal: "an implementation of the POSIX cal command, as described in the OpenBSD manpage, that strives to have the same alignment as Busybox's and has (or tries to have) the Toybox's cal option to highlight specified days"
  catv: "the harmful features of cat"
  ccat: "syntax highlighted cat"
  dial: "dials a network endpoint, ported from Torgo"
  ed: "Ed with syntax highlighting (ed from u-root but with syntax highlighting)"
  envsubst: "works like the built-in that many shells have. https://manned.org/man/alpine/envsubst"
  fin: "file info command, from Torgo"
  fortune: "the cookie reader program, it gives you a random quote each time you execute it"
  hpwd: "an implementation of pwd that replaces your $HOME with a prefix such as ~ or something else"
  importenv: "lets you access variables defined in the namespace/scope of another process"
  isainfo: "like the SunOS command, it will show info about your architecture, capabilities, bits, etc."
  issue: "reads an 'issue' file (/etc/issue or a user-suplied one)"
  listen: "listens and announces on a network port, ported from Torgo"
  noroot-do: "lets you chroot into a rootfs without root"
  printf: "the POSIX printf command"
  relf: "a program that shows you the sections of an ELF file and can also guess what the unknown sections contain"
  test: "the POSIX test command with some extensions for compatibility with extended shells and their scripts"
  walk: "walk command, from Torgo, this command walks a directory based on various rules and it print each file's full path to STDOUT"
  wttr: "gets weather info from wttr.in"
homepage:
  - "https://github.com/xplshn/a-utils"
  - "https://github.com/xplshn/Andes"
license:
  - id: "BSD-3-Clause"
    url: "https://github.com/xplshn/a-utils/raw/bcabf0cda41cfde837b62ae972f6ef46996f9092/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Pre Built Binary Fetched from Upstream. Check/Report @ https://github.com/xplshn/a-utils"
provides:
  - "cal"
  - "catv"
  - "ccat"
  - "dial"
  - "ed"
  - "envsubst"
  - "fin"
  - "fortune"
  - "hpwd"
  - "importenv"
  - "isainfo"
  - "issue"
  - "listen"
  - "noroot-do"
  - "printf"
  - "relf"
  - "test"
  - "walk"
  - "wttr"
  - "xo"
src_url:
  - "https://github.com/xplshn/a-utils"
tag:
  - "coreutils"
  - "moreutils"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://api.gh.pkgforge.dev/repos/xplshn/a-utils/releases?per_page=100" | jq -r '[.[] | select(.draft == false)] | .[0].tag_name | gsub("\\s+"; "")' | tr -d '"'\''[:space:]'
  run: |
    #Download
    case "$(uname -m)" in
      aarch64)
        soar dl "https://github.com/xplshn/a-utils@${PKGVER}" --match "linux,arm64" --exclude "amd64,x86,x64,sha256,sha512,bsd,macos,windows" --exclude "tar.gz" -o "${SBUILD_TMPDIR}/${PKG}" --yes
        soar dl "https://github.com/xplshn/a-utils@${PKGVER}" --match "linux,arm64,tar.gz" --exclude "amd64,x86,x64,sha256,sha512,bsd,macos,windows" -o "${SBUILD_TMPDIR}/${PKG}.archive" --yes
        ;;
      x86_64)
        soar dl "https://github.com/xplshn/a-utils@${PKGVER}" --match "linux,amd64" --exclude "aarch,arm" --exclude "tar.gz" -o "${SBUILD_TMPDIR}/${PKG}" --yes
        soar dl "https://github.com/xplshn/a-utils@${PKGVER}" --match "linux,amd64,tar.gz" --exclude "aarch,arm" -o "${SBUILD_TMPDIR}/${PKG}.archive" --yes
        ;;
    esac
    #Extract
    while E_X=$(find "${SBUILD_TMPDIR}" -type f -exec file -i "{}" + | 
     grep -Ei "archive|compressed|gzip|x-tar" |
     grep -iv "application/.*executable" |
     cut -d: -f1 | head -n1); [ -n "${E_X}" ]
     do
       7z e "${E_X}" -o"${SBUILD_TMPDIR}/." -y && {
        file -i "${E_X}" | grep -q "application/.*executable" && break
        rm -f "${E_X}"
       } || break
     done
    #Copy
    find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"