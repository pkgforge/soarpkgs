#!/SBUILD ver @v1.0.0    
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/httpd/static.official.source.yaml
_disabled: false

pkg: "httpd"
pkg_id: "github.com.Francesco149.nolibc-httpd.source"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description:
  _default: "Single-Page HTTP Server that doesn't depend on libc"
  httpd-asm: "Single-Page HTTP Server that doesn't depend on libc (Assembly Version)"
  httpd-c: "Single-Page HTTP Server that doesn't depend on libc (C Version)"
homepage:
  - "https://github.com/Francesco149/nolibc-httpd"
license:
  - id: "Unlicense"
    url: "https://github.com/Francesco149/nolibc-httpd/raw/2d6ea8e32aaa871563b75af35dd207a084a0ec35/UNLICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built From Source (Latest Git HEAD). Check/Report @ https://github.com/Francesco149/nolibc-httpd"
provides:
  - "httpd-asm"
  - "httpd-c"
#repology:
#  - "httpd"
src_url:
  - "https://github.com/Francesco149/nolibc-httpd"
tag:
  - "Utility"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    pushd "$(mktemp -d)" >/dev/null 2>&1 && \
    git clone --depth="1" --filter="blob:none" --no-checkout --single-branch --quiet "https://github.com/Francesco149/nolibc-httpd" "./TEMPREPO" >/dev/null 2>&1 && \
    git --git-dir="./TEMPREPO/.git" --no-pager log -1 --pretty=format:'HEAD-%h-%cd' --date=format:'%y%m%dT%H%M%S' && \
    [ -d "$(realpath .)/TEMPREPO" ] && rm -rf "$(realpath .)" >/dev/null 2>&1 && popd >/dev/null 2>&1
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "alpine-builder" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/alpine-builder:latest" \
      bash -l -c '
      #Setup ENV
       set -x ; mkdir -p "/build-bins" && pushd "$(mktemp -d)" >/dev/null 2>&1
      #Build (ASM)
       pushd "$(mktemp -d)" &>/dev/null &&\
       git clone --filter "blob:none" --depth="1" --quiet "https://github.com/Francesco149/nolibc-httpd" "./TEMPREPO" && cd "./TEMPREPO"
       chmod -v "a+x" "./asm.sh" && "./asm.sh"
       find "." -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable" | cut -d":" -f1 | xargs realpath | xargs -I "{}" cp -fv "{}" "/build-bins/httpd-asm"
       ( askalono --format "json" crawl --follow "$(realpath .)" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/LICENSE" ) 2>/dev/null
      #Build (C)
       pushd "$(mktemp -d)" &>/dev/null &&\
       git clone --filter "blob:none" --depth="1" --quiet "https://github.com/Francesco149/nolibc-httpd" "./TEMPREPO" && cd "./TEMPREPO"
       chmod -v "a+x" "./build.sh" && "./build.sh"
       find "." -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable" | cut -d":" -f1 | xargs realpath | xargs -I "{}" cp -fv "{}" "/build-bins/httpd-c"
      #strip & info 
       find "/build-bins/" -type f -exec objcopy --remove-section=".comment" --remove-section=".note.*" "{}" \;
       find "/build-bins/" -type f ! -name "*.no_strip" -exec strip --strip-debug --strip-dwo --strip-unneeded "{}" \; >/dev/null 2>&1
       file "/build-bins/"* && du -sh "/build-bins/"*
       popd >/dev/null 2>&1
      '
    #Copy & Meta
     docker cp "alpine-builder:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"