#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/ngrok/static.official.stable.yaml
_disabled: false

pkg: "ngrok"
pkg_id: "equinox.com.ngrok.stable"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: "External Tunnel to Internal Assets"
distro_pkg:
  archlinux:
    aur:
      - "ngrok"
  homebrew:
    - "ngrok"
  nixpkgs:
    - "ngrok"
homepage:
  - "https://ngrok.com"
license:
  - id: "Custom"
    url: "https://aur.archlinux.org/cgit/aur.git/plain/TERMS-OF-SERVICE.txt?h=ngrok"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Pre Built Binary Fetched from Upstream. Check/Report @ https://ngrok.com/downloads/linux"
provides:
  - "ngrok"
repology:
  - "ngrok"
src_url:
  - "https://ngrok.com/downloads/linux?tab=download"
  - "https://dl.equinox.io/ngrok/ngrok-v3/stable/archive"
tag:
  - "tunnel"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=ngrok" | sed -n 's/^pkgver=//p' | tr -d '"'\''[:space:]'
  run: |
    #Download
     case "$(uname -m)" in
       aarch64)
         #https://dl.equinox.io/ngrok/ngrok-v3/stable/archive
         #DOWNLOAD_URL="$(curl -qfsSL "https://ngrok.com/downloads/linux?tab=download" | grep -o 'href="[^"]*"' |\
         #  sed 's/href="//' | sed 's/"$//' | grep -i 'linux' | grep -i 'http' |\
         #  grep -Eiv 'amd64|armhf|armv7|deb|host|i686|rpm|x86_64' | grep -Ei 'aarch64|arm64' | sort --version-sort |\
         #  tail -n 1 | tr -d '"'\''[:space:]')"
         DOWNLOAD_URL="$(curl -qfsSL "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=ngrok" |\
          grep -Ei 'source_aarch64' | grep -oP '"\K[^"]*(?=")' | grep -Ei 'aarch64|arm64' | grep -i 'http' |\
          sort --version-sort | tail -n 1 | tr -d '"'\''[:space:]')"
         curl -w "(DL) <== %{url}\n" -qfSL "${DOWNLOAD_URL}" -o "${SBUILD_TMPDIR}/${PKG}.archive"
         file "${SBUILD_TMPDIR}/${PKG}.archive"
         ;;
       x86_64)
         #DOWNLOAD_URL="$(curl -qfsSL "https://ngrok.com/downloads/linux?tab=download" | grep -o 'href="[^"]*"' |\
         #  sed 's/href="//' | sed 's/"$//' | grep -i 'linux' | grep -i 'http' |\
         #  grep -Eiv 'aarch64|arm|deb|host|i686|rpm' | grep -Ei 'amd64|x86_64' | sort --version-sort |\
         #  tail -n 1 | tr -d '"'\''[:space:]')"
         DOWNLOAD_URL="$(curl -qfsSL "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=ngrok" |\
          grep -Ei 'source_x86_64' | grep -oP '"\K[^"]*(?=")' | grep -Ei 'amd64|x86_64' | grep -i 'http' |\
          sort --version-sort | tail -n 1 | tr -d '"'\''[:space:]')"
         curl -w "(DL) <== %{url}\n" -qfSL "${DOWNLOAD_URL}" -o "${SBUILD_TMPDIR}/${PKG}.archive"
         file "${SBUILD_TMPDIR}/${PKG}.archive"
         ;;
     esac
    #Extract
    while E_X=$(find "${SBUILD_TMPDIR}" -type f -exec file -i "{}" + | 
     grep -Ei "archive|compressed|gzip|x-tar" |
     grep -iv "application/.*executable" |
     cut -d: -f1 | head -n1); [ -n "${E_X}" ]
     do
       7z e "${E_X}" -o"${SBUILD_TMPDIR}/." -y && {
        file -i "${E_X}" | grep -q "application/.*executable" && break
        rm -f "${E_X}"
       } || break
     done
    #Copy
    find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"