#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/coreutils/static.nixpkgs.stable.yaml
_disabled: false

pkg: "coreutils"
pkg_id: "nixpkgs.coreutils"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description:
  _default: "GNU File, Shell, and Text utilities"
  "[": "Check file types and compare values [coreutils]"
  arch: "Print machine hardware name (same as uname -m) [coreutils]"
  b2sum: "Compute and check BLAKE2 message digest [coreutils]"
  base32: "Base32 encode/decode data and print to standard output [coreutils]"
  base64: "Base64 encode/decode data and print to standard output [coreutils]"
  basename: "Strip directory and suffix from filenames [coreutils]"
  basenc: "Encode/decode data and print to standard output [coreutils]"
  cat: "Concatenate files and print on the standard output [coreutils]"
  chcon: "Change file security context [coreutils]"
  chgrp: "Change group ownership [coreutils]"
  chmod: "Change file owner and group [coreutils]"
  chown: "Change file owner and group [coreutils]"
  chroot: "Run command or interactive shell with special root directory [coreutils]"
  cksum: "Compute and verify file checksums [coreutils]"
  comm: "Compare two sorted files line by line [coreutils]"
  coreutils: "Multicall Binary for Coreutils: GNU File, Shell, and Text utilities"  
  cp: "Copy files and directories [coreutils]"
  csplit: "Split a file into sections determined by context lines [coreutils]"
  cut: "Remove sections from each line of files [coreutils]"
  date: "Print or set the system date and time [coreutils]"
  dd: "Convert and Copy a file [coreutils]"
  df: "Report file system space usage [coreutils]"
  dir: "List directory contents [coreutils]"
  dircolors: "Color setup for ls [coreutils]"
  dirname: "Strip last component from file name [coreutils]"
  du: "Estimate file space usage [coreutils]"
  echo: "Display a line of text [coreutils]"
  env: "Run a program in a modified environment [coreutils]"
  expand: "Convert tabs to spaces [coreutils]"
  expr: "Evaluate expressions [coreutils]"
  factor: "Factor numbers [coreutils]"
  "false": "Do nothing, unsuccessfully [coreutils]"
  fmt: "Simple optimal text formatter [coreutils]"
  fold: "Wrap each input line to fit in specified width [coreutils]"
  ginstall: "Copy files and set attributes [coreutils]"
  groups: "Print the groups a user is in [coreutils]"
  head: "Output the first part of files [coreutils]"
  hostid: "Print the numeric identifier for the current host [coreutils]"
  hostname: "Display or set the system's host name [coreutils]"
  id: "Print real and effective user and group IDs [coreutils]"
  install: "Copy files and set attributes [coreutils]"
  join: "Join lines of two files on a common field [coreutils]"
  kill: "Send a signal (default: TERM) to given PIDs [coreutils]"
  link: "Call the link function to create a link to a file [coreutils]"
  ln: "Make links between files [coreutils]"
  logname: "Print user's login name [coreutils]"
  ls: "List directory contents [coreutils]"
  make-prime-list: "Generate Prime Numbers [coreutils]"
  md5sum: "Compute and check MD5 message digest [coreutils]"
  mkdir: "Make directories [coreutils]"
  mkfifo: "Make FIFOs (named pipes) [coreutils]"
  mknod: "Make block or character special files [coreutils]"
  mktemp: "Create a temporary file or directory [coreutils]"
  mv: "Move (rename) files [coreutils]"
  nice: "Run a program with modified scheduling priority [coreutils]"
  nl: "Number lines of files [coreutils]"
  nohup: "Run a command immune to hangups, with output to a non-tty [coreutils]"
  nproc: "Print the number of processing units available [coreutils]"
  numfmt: "Convert numbers from/to human-readable strings [coreutils]"
  od: "Dump files in octal and other formats [coreutils]"
  paste: "Merge lines of files [coreutils]"
  pathchk: "Check whether file names are valid or portable [coreutils]"
  pinky: "Lightweight finger [coreutils]"
  pr: "Convert text files for printing [coreutils]"
  printenv: "Print all or part of environment [coreutils]"
  printf: "Format and print data [coreutils]"
  ptx: "Produce a permuted index of file contents [coreutils]"
  pwd: "Print name of current/working directory [coreutils]"
  readlink: "Print resolved symbolic links or canonical file names [coreutils]"
  realpath: "Print the resolved path [coreutils]"
  rm: "Remove files or directories [coreutils]"
  rmdir: "Remove empty directories [coreutils]"
  runcon: "Run command with specified security context [coreutils]"
  seq: "Print a sequence of numbers [coreutils]"
  sha1sum: "Compute and check SHA1 message digest [coreutils]"
  sha224sum: "Compute and check SHA224 message digest [coreutils]"
  sha256sum: "Compute and check SHA256 message digest [coreutils]"
  sha384sum: "Compute and check SHA384 message digest [coreutils]"
  sha512sum: "Compute and check SHA512 message digest [coreutils]"
  shred: "Overwrite a file to hide its contents, and optionally delete it [coreutils]"
  shuf: "Generate random permutations [coreutils]"
  sleep: "Delay for a specified amount of time [coreutils]"
  sort: "Sort lines of text files [coreutils]"
  split: "Split a file into pieces [coreutils]"
  stat: "Display file or file system status [coreutils]"
  stdbuf: "Run COMMAND, with modified buffering operations for its standard streams [coreutils]"
  stty: "Change and print terminal line settings [coreutils]"
  sum: "Checksum and count the blocks in a file [coreutils]"
  sync: "Synchronize cached writes to persistent storage [coreutils]"
  tac: "Concatenate and print files in reverse [coreutils]"
  tail: "Output the last part of files [coreutils]"
  tee: "Read from standard input and write to standard output and files [coreutils]"
  test: "Check file types and compare values [coreutils]"
  timeout: "Run a command with a time limit [coreutils]"
  touch: "Change file timestamps [coreutils]"
  tr: "Translate or Delete characters [coreutils]"
  "true": "Do nothing, successfully [coreutils]"
  truncate: "Shrink or extend the size of a file to the specified size [coreutils]"
  tsort: "Perform topological sort [coreutils]"
  tty: "Print the file name of the terminal connected to standard input [coreutils]"
  uname: "Print system information [coreutils]"
  unexpand: "Convert spaces to tabs [coreutils]"
  uniq: "Report or omit repeated lines [coreutils]"
  unlink: "Call the unlink function to remove the specified file [coreutils]"
  uptime: "Display the time since the last boot [coreutils]"
  users: "Print the user names of users currently logged in to the current host [coreutils]"
  vdir: "List directory contents [coreutils]"
  wc: "Print newline, word, and byte counts for each file [coreutils]"
  who: "Show who is logged on [coreutils]"
  whoami: "Print effective user name [coreutils]"
  yes: "Output a string repeatedly until killed [coreutils]"
distro_pkg:
  alpine:
    - "coreutils"
  archlinux:
    aur:
      - "coreutils-git"
  debian:
    - "coreutils"
  gnuguix:
    - "coreutils"
  homebrew:
    - "coreutils"
  nixpkgs:
    - "coreutils"
homepage:
  - "https://www.gnu.org/software/coreutils/"
license:
  - id: "GPL-3.0"
    url: "https://github.com/coreutils/coreutils/raw/fbfd886e595cf9b021fc9d8363760953a1d3e6ca/COPYING"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using Nix. Check/Report @ https://github.com/NixOS/nixpkgs"
  - "This is the multicall version i.e all progs are symlinked"
provides:
  - "coreutils==["
  - "coreutils==[["  
  - "coreutils==arch"
  - "coreutils==b2sum"
  - "coreutils==base32"
  - "coreutils==base64"
  - "coreutils==basename"
  - "coreutils==basenc"
  - "coreutils==cat"
  - "coreutils==chcon"
  - "coreutils==chgrp"
  - "coreutils==chmod"
  - "coreutils==chown"
  - "coreutils==chroot"
  - "coreutils==cksum"
  - "coreutils==comm"
  - "coreutils==cp"
  - "coreutils==csplit"
  - "coreutils==cut"
  - "coreutils==date"
  - "coreutils==dd"
  - "coreutils==df"
  - "coreutils==dir"
  - "coreutils==dircolors"
  - "coreutils==dirname"
  - "coreutils==du"
  - "coreutils==echo"
  - "coreutils==env"
  - "coreutils==expand"
  - "coreutils==expr"
  - "coreutils==factor"
  - "coreutils==false"
  - "coreutils==fmt"
  - "coreutils==fold"
  - "coreutils==ginstall"
  - "coreutils==groups"
  - "coreutils==head"
  - "coreutils==hostid"
  - "coreutils==hostname"  
  - "coreutils==id"
  - "coreutils==install"  
  - "coreutils==join"
  - "coreutils==kill"
  - "coreutils==link"
  - "coreutils==ln"
  - "coreutils==logname"
  - "coreutils==ls"
  - "coreutils==make-prime-list"
  - "coreutils==md5sum"
  - "coreutils==mkdir"
  - "coreutils==mkfifo"
  - "coreutils==mknod"
  - "coreutils==mktemp"
  - "coreutils==mv"
  - "coreutils==nice"
  - "coreutils==nl"
  - "coreutils==nohup"
  - "coreutils==nproc"
  - "coreutils==numfmt"
  - "coreutils==od"
  - "coreutils==paste"
  - "coreutils==pathchk"
  - "coreutils==pinky"
  - "coreutils==pr"
  - "coreutils==printenv"
  - "coreutils==printf"
  - "coreutils==ptx"
  - "coreutils==pwd"
  - "coreutils==readlink"
  - "coreutils==realpath"
  - "coreutils==rm"
  - "coreutils==rmdir"
  - "coreutils==runcon"
  - "coreutils==seq"
  - "coreutils==sha1sum"
  - "coreutils==sha224sum"
  - "coreutils==sha256sum"
  - "coreutils==sha384sum"
  - "coreutils==sha512sum"
  - "coreutils==shred"
  - "coreutils==shuf"
  - "coreutils==sleep"
  - "coreutils==sort"
  - "coreutils==split"
  - "coreutils==stat"
  - "coreutils==stty"
  - "coreutils==sum"
  - "coreutils==sync"
  - "coreutils==tac"
  - "coreutils==tail"
  - "coreutils==tee"
  - "coreutils==test"
  - "coreutils==timeout"
  - "coreutils==touch"
  - "coreutils==tr"
  - "coreutils==true"
  - "coreutils==truncate"
  - "coreutils==tsort"
  - "coreutils==tty"
  - "coreutils==uname"
  - "coreutils==unexpand"
  - "coreutils==uniq"
  - "coreutils==unlink"
  - "coreutils==uptime"
  - "coreutils==users"
  - "coreutils==vdir"
  - "coreutils==wc"
  - "coreutils==who"
  - "coreutils==whoami"
  - "coreutils==yes"
repology:
  - "coreutils"
src_url:
  - "https://github.com/coreutils/coreutils"
tag:
  - "bootstrap"
  - "busybox"
  - "coreutils"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"  
  pkgver: |
    nix derivation show "nixpkgs#coreutils" --impure --refresh --quiet 1>&1 2>/dev/null | sed -n '/^[[:space:]]*{/,$p' | jq -r '.. | objects | (select(has("version")).version, (select(has("env")) | select(.env.__json != null) | .env.__json | fromjson | select(has("version")).version) | select(.))' | tr -d '[:space:]'
  run: |
    #Build
     echo -e "\n" ; nix-instantiate --eval --expr "builtins.toJSON (with import <nixpkgs> {}; ${PKG}.meta)" --quiet 2>/dev/null | jq -r fromjson 2>/dev/null ; echo -e "\n"
     nix-build '<nixpkgs>' --impure --attr "pkgsStatic.coreutils" --cores "$(($(nproc)+1))" --max-jobs "$(($(nproc)+1))" --log-format bar-with-logs --out-link "${SBUILD_TMPDIR}/nixbuild"
     find -L "$(find "${SBUILD_TMPDIR}" -maxdepth 1 -type d -o -type l -exec realpath "{}" \; | grep -Ev '^\.$' | head -n 1)" | sort | awk -F/ '{indent=""; for (i=2; i<NF; i++) indent=indent " "; print (NF>1 ? indent "--> " $NF : $NF)}'
    #Fix Perms
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type d -o -type l -exec realpath "{}" \; | grep -Ev '^\.$' |\
     xargs -I{} find -L "{}" -type d -iregex ".*\(bin\|exec\).*" | \
     xargs -I{} sudo rsync -achLv --no-relative "{}/." "${SBUILD_TMPDIR}/."
     sudo chown -Rv "$(whoami):$(whoami)" "${SBUILD_TMPDIR}" && chmod -Rv 755 "${SBUILD_TMPDIR}"
    #Fix Shell Scripts
     find "${SBUILD_TMPDIR}" -type f -iregex '.*\.\(bin\|pl\)$' -exec bash -c 'mv -fv "$1" "${1%.*}"' _ "{}" \;
     find "${SBUILD_TMPDIR}" -type f \( -name "*.sh" -o -exec sh -c 'file -i "$1" | grep -qiv "application/.*executable"' sh {} \; \) -print0 | xargs -0 -I {} sh -c '
           sed "s|^#!/nix/store/.*/bin/sh|#!/bin/sh|" -i "{}" 2>/dev/null
           sed "s|/nix/store[^ ]*/bin/\([^ ]*\)|/usr/local/bin/\1|g" -i "{}" 2>/dev/null
           sed "s|/nix/store/[^/]*/bin|/usr/local/bin|g" -i "{}" 2>/dev/null
           sed "s|/nix/store[^/ ]*/bin|/usr/local/bin|g" -i "{}" 2>/dev/null
           sed "s|/nix/store[^ \"'\'']*|/|g" -i "{}" 2>/dev/null
       '
    #Copy
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei 'application/.*executable|text/x-perl|text/.*script' | cut -d":" -f1 | xargs realpath | sort -u | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"
     ( askalono --format "json" crawl --follow "${SBUILD_TMPDIR}" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "${SBUILD_OUTDIR}/LICENSE" ) 2>/dev/null