#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/static.vlang.source.yaml
_disabled: false

pkg: "coreutils_uutils"
pkg_id: "github.com.vlang.coreutils"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description:
  _default: "GNU coreutils in V-Lang"
  "[": "Check file types and compare values [coreutils-vlang]"
  arch: "Print machine hardware name (same as uname -m) [coreutils-vlang]"
  b2sum: "Compute and check BLAKE2 message digest [coreutils-vlang]"
  b3sum: "Compute and check BLAKE3 message digest [coreutils-vlang]"
  base32: "Base32 encode/decode data and print to standard output [coreutils-vlang]"
  base64: "Base64 encode/decode data and print to standard output [coreutils-vlang]"
  basename: "Strip directory and suffix from filenames [coreutils-vlang]"
  basenc: "Encode/decode data and print to standard output [coreutils-vlang]"
  cat: "Concatenate files and print on the standard output [coreutils-vlang]"
  chcon: "Change file security context [coreutils-vlang]"
  chgrp: "Change group ownership [coreutils-vlang]"
  chmod: "Change file owner and group [coreutils-vlang]"
  chown: "Change file owner and group [coreutils-vlang]"
  chroot: "Run command or interactive shell with special root directory [coreutils-vlang]"
  cksum: "Compute and verify file checksums [coreutils-vlang]"
  comm: "Compare two sorted files line by line [coreutils-vlang]"
  coreutils: "Multicall Binary for Coreutils: GNU File, Shell, and Text utilities"
  cp: "Copy files and directories [coreutils-vlang]"
  csplit: "Split a file into sections determined by context lines [coreutils-vlang]"
  cut: "Remove sections from each line of files [coreutils-vlang]"
  date: "Print or set the system date and time [coreutils-vlang]"
  dd: "Convert and Copy a file [coreutils-vlang]"
  df: "Report file system space usage [coreutils-vlang]"
  dir: "List directory contents [coreutils-vlang]"
  dircolors: "Color setup for ls [coreutils-vlang]"
  dirname: "Strip last component from file name [coreutils-vlang]"
  du: "Estimate file space usage [coreutils-vlang]"
  echo: "Display a line of text [coreutils-vlang]"
  env: "Run a program in a modified environment [coreutils-vlang]"
  expand: "Convert tabs to spaces [coreutils-vlang]"
  expr: "Evaluate expressions [coreutils-vlang]"
  factor: "Factor numbers [coreutils-vlang]"
  "false": "Do nothing, unsuccessfully [coreutils-vlang]"
  fmt: "Simple optimal text formatter [coreutils-vlang]"
  fold: "Wrap each input line to fit in specified width [coreutils-vlang]"
  ginstall: "Copy files and set attributes [coreutils-vlang]"
  groups: "Print the groups a user is in [coreutils-vlang]"
  hashsum: "Compute and check message digests for many Algorithms"
  head: "Output the first part of files [coreutils-vlang]"
  hostid: "Print the numeric identifier for the current host [coreutils-vlang]"
  hostname: "Display or set the system's host name [coreutils-vlang]"
  id: "Print real and effective user and group IDs [coreutils-vlang]"
  install: "Copy files and set attributes [coreutils-vlang]"
  join: "Join lines of two files on a common field [coreutils-vlang]"
  kill: "Send a signal (default: TERM) to given PIDs [coreutils-vlang]"
  link: "Call the link function to create a link to a file [coreutils-vlang]"
  ln: "Make links between files [coreutils-vlang]"
  logname: "Print user's login name [coreutils-vlang]"
  ls: "List directory contents [coreutils-vlang]"
  make-prime-list: "Generate Prime Numbers [coreutils-vlang]"
  md5sum: "Compute and check MD5 message digest [coreutils-vlang]"
  mkdir: "Make directories [coreutils-vlang]"
  mkfifo: "Make FIFOs (named pipes) [coreutils-vlang]"
  mknod: "Make block or character special files [coreutils-vlang]"
  mktemp: "Create a temporary file or directory [coreutils-vlang]"
  mv: "Move (rename) files [coreutils-vlang]"
  nice: "Run a program with modified scheduling priority [coreutils-vlang]"
  nl: "Number lines of files [coreutils-vlang]"
  nohup: "Run a command immune to hangups, with output to a non-tty [coreutils-vlang]"
  nproc: "Print the number of processing units available [coreutils-vlang]"
  numfmt: "Convert numbers from/to human-readable strings [coreutils-vlang]"
  od: "Dump files in octal and other formats [coreutils-vlang]"
  paste: "Merge lines of files [coreutils-vlang]"
  pathchk: "Check whether file names are valid or portable [coreutils-vlang]"
  pinky: "Lightweight finger [coreutils-vlang]"
  pr: "Convert text files for printing [coreutils-vlang]"
  printenv: "Print all or part of environment [coreutils-vlang]"
  printf: "Format and print data [coreutils-vlang]"
  ptx: "Produce a permuted index of file contents [coreutils-vlang]"
  pwd: "Print name of current/working directory [coreutils-vlang]"
  readlink: "Print resolved symbolic links or canonical file names [coreutils-vlang]"
  realpath: "Print the resolved path [coreutils-vlang]"
  rm: "Remove files or directories [coreutils-vlang]"
  rmdir: "Remove empty directories [coreutils-vlang]"
  runcon: "Run command with specified security context [coreutils-vlang]"
  seq: "Print a sequence of numbers [coreutils-vlang]"
  sha1sum: "Compute and check SHA1 message digest [coreutils-vlang]"
  sha224sum: "Compute and check SHA224 message digest [coreutils-vlang]"
  sha256sum: "Compute and check SHA256 message digest [coreutils-vlang]"
  sha3sum: "Compute and check SHA3 message digest [coreutils-vlang]"
  sha3-224sum: "Compute and check SHA3-224 message digest [coreutils-vlang]"
  sha3-256sum: "Compute and check SHA3-256 message digest [coreutils-vlang]"
  sha3-384sum: "Compute and check SHA3-384 message digest [coreutils-vlang]"
  sha3-512sum: "Compute and check SHA3-512 message digest [coreutils-vlang]"
  sha384sum: "Compute and check SHA384 message digest [coreutils-vlang]"
  sha512sum: "Compute and check SHA512 message digest [coreutils-vlang]"
  shake128sum: "Compute and check SHAKE-128 message digest [coreutils-vlang]"
  shake256sum: "Compute and check SHAKE-128 message digest [coreutils-vlang]"
  shred: "Overwrite a file to hide its contents, and optionally delete it [coreutils-vlang]"
  shuf: "Generate random permutations [coreutils-vlang]"
  sleep: "Delay for a specified amount of time [coreutils-vlang]"
  sort: "Sort lines of text files [coreutils-vlang]"
  split: "Split a file into pieces [coreutils-vlang]"
  stat: "Display file or file system status [coreutils-vlang]"
  stdbuf: "Run COMMAND, with modified buffering operations for its standard streams [coreutils-vlang]"
  stty: "Change and print terminal line settings [coreutils-vlang]"
  sum: "Checksum and count the blocks in a file [coreutils-vlang]"
  sync: "Synchronize cached writes to persistent storage [coreutils-vlang]"
  tac: "Concatenate and print files in reverse [coreutils-vlang]"
  tail: "Output the last part of files [coreutils-vlang]"
  tee: "Read from standard input and write to standard output and files [coreutils-vlang]"
  test: "Check file types and compare values [coreutils-vlang]"
  timeout: "Run a command with a time limit [coreutils-vlang]"
  touch: "Change file timestamps [coreutils-vlang]"
  tr: "Translate or Delete characters [coreutils-vlang]"
  "true": "Do nothing, successfully [coreutils-vlang]"
  truncate: "Shrink or extend the size of a file to the specified size [coreutils-vlang]"
  tsort: "Perform topological sort [coreutils-vlang]"
  tty: "Print the file name of the terminal connected to standard input [coreutils-vlang]"
  uname: "Print system information [coreutils-vlang]"
  unexpand: "Convert spaces to tabs [coreutils-vlang]"
  uniq: "Report or omit repeated lines [coreutils-vlang]"
  unlink: "Call the unlink function to remove the specified file [coreutils-vlang]"
  uptime: "Display the time since the last boot [coreutils-vlang]"
  users: "Print the user names of users currently logged in to the current host [coreutils-vlang]"
  vdir: "List directory contents [coreutils-vlang]"
  wc: "Print newline, word, and byte counts for each file [coreutils-vlang]"
  who: "Show who is logged on [coreutils-vlang]"
  whoami: "Print effective user name [coreutils-vlang]"
  yes: "Output a string repeatedly until killed [coreutils-vlang]"
homepage:
  - "https://github.com/vlang/coreutils"
license:
  - id: "MIT"
    url: "https://github.com/vlang/coreutils/raw/b082754c3060f5e2160edcfd88dc01ee7d0498e2/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built From Source (Latest Git HEAD). Check/Report @ https://github.com/vlang/coreutils"
  - "This is the standalone version i.e all progs are built individually"  
provides:
  - "arch"
  - "b2sum"
  - "b3sum"
  - "base32"
  - "base64"
  - "basename"
  - "basenc"
  - "cat"
  - "chgrp"
  - "chmod"
  - "chown"
  - "chroot"
  - "cksum"
  - "comm"
  - "coreutils"
  - "cp"
  - "csplit"
  - "cut"
  - "date"
  - "dd"
  - "df"
  - "dir"
  - "dircolors"
  - "dirname"
  - "du"
  - "echo"
  - "env"
  - "expand"
  - "expr"
  - "factor"
  - "false"
  - "fmt"
  - "fold"
  - "groups"
  - "hashsum"
  - "head"
  - "hostid"
  - "hostname"
  - "id"
  - "install"
  - "join"
  - "kill"
  - "link"
  - "ln"
  - "logname"
  - "ls"
  - "md5sum"
  - "mkdir"
  - "mkfifo"
  - "mknod"
  - "mktemp"
  - "more"
  - "mv"
  - "nice"
  - "nl"
  - "nohup"
  - "nproc"
  - "numfmt"
  - "od"
  - "paste"
  - "pathchk"
  - "pinky"
  - "pr"
  - "printenv"
  - "printf"
  - "ptx"
  - "pwd"
  - "readlink"
  - "realpath"
  - "rm"
  - "rmdir"
  - "seq"
  - "sha1sum"
  - "sha224sum"
  - "sha256sum"
  - "sha3-224sum"
  - "sha3-256sum"
  - "sha3-384sum"
  - "sha3-512sum"
  - "sha384sum"
  - "sha3sum"
  - "sha512sum"
  - "shake128sum"
  - "shake256sum"
  - "shred"
  - "shuf"
  - "sleep"
  - "sort"
  - "split"
  - "stat"
  - "stdbuf"
  - "stty"
  - "sum"
  - "sync"
  - "tac"
  - "tail"
  - "tee"
  - "test==["
  - "test==[["
  - "timeout"
  - "touch"
  - "tr"
  - "true"
  - "truncate"
  - "tsort"
  - "tty"
  - "uname"
  - "unexpand"
  - "uniq"
  - "unlink"
  - "uptime"
  - "users"
  - "vdir"
  - "wc"
  - "who"
  - "whoami"
  - "yes"
#repology:
#  - "coreutils-vlang"
src_url:
  - "https://github.com/vlang/coreutils"
tag:
  - "bootstrap"
  - "busybox"
  - "coreutils"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    pushd "$(mktemp -d)" >/dev/null 2>&1 && \
    git clone --depth="1" --filter="blob:none" --no-checkout --single-branch --quiet "https://github.com/vlang/coreutils" "./TEMPREPO" >/dev/null 2>&1 && \
    git --git-dir="./TEMPREPO/.git" --no-pager log -1 --pretty=format:'HEAD-%h-%cd' --date=format:'%y%m%dT%H%M%S' && \
    [ -d "$(realpath .)/TEMPREPO" ] && rm -rf "$(realpath .)" >/dev/null 2>&1 && popd >/dev/null 2>&1
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "alpine-builder" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/alpine-builder:latest" \
      bash -l -c '
      #Setup ENV
       set -x ; mkdir -p "/build-bins" && pushd "$(mktemp -d)" >/dev/null 2>&1
       apk update && apk upgrade --no-interactive 2>/dev/null
       apk add vlang --repository="https://dl-cdn.alpinelinux.org/alpine/edge/testing" --latest --upgrade --no-interactive
      #ENV
       export CC="clang"
       export CXX="clang++"
       export CFLAGS="-Os -flto=auto -fuse-ld=$(which mold) -g0 -pipe -static -static-pie -v -w -Wno-error"
       export CPPFLAGS="${CFLAGS}"
       export CXXFLAGS="${CFLAGS}"
       export LD="$(which mold)"
       export LDFLAGS="-static -static-pie -Wl,--Bstatic,--build-id=none,--no-dynamic-linker,--no-fatal-warnings,--static,--stats,--strip-all,-z,noexecstack,-z,pack-relative-relocs,-z,relro"
       export VFLAGS="-cc clang -gc none -w -prod -showcc -v -cflags \"${CFLAGS}\" -ldflags \"${LDFLAGS}\""
      #Build:https://github.com/vlang/coreutils/tree/main/src
       git clone --filter "blob:none" --depth="1" --quiet "https://github.com/vlang/coreutils" "./TEMPREPO" && cd "./TEMPREPO"
       echo -e "\n[+] Flags: ${VFLAGS}\n"
       eval v "${VFLAGS}" "./src/[/" -o "/build-bins/["
       eval v "${VFLAGS}" "./src/arch/" -o "/build-bins/arch"
       eval v "${VFLAGS}" "./src/b2sum/" -o "/build-bins/b2sum"
       eval v "${VFLAGS}" "./src/base32/" -o "/build-bins/base32"
       eval v "${VFLAGS}" "./src/base64/" -o "/build-bins/base64"
       eval v "${VFLAGS}" "./src/basename/" -o "/build-bins/basename"
       eval v "${VFLAGS}" "./src/basenc/" -o "/build-bins/basenc"
       eval v "${VFLAGS}" "./src/cat/" -o "/build-bins/cat"
       eval v "${VFLAGS}" "./src/chcon/" -o "/build-bins/chcon"
       eval v "${VFLAGS}" "./src/chgrp/" -o "/build-bins/chgrp"
       eval v "${VFLAGS}" "./src/chmod/" -o "/build-bins/chmod"
       eval v "${VFLAGS}" "./src/chown/" -o "/build-bins/chown"
       eval v "${VFLAGS}" "./src/chroot/" -o "/build-bins/chroot"
       eval v "${VFLAGS}" "./src/cksum/" -o "/build-bins/cksum"
       eval v "${VFLAGS}" "./src/comm/" -o "/build-bins/comm"
       eval v "${VFLAGS}" "./src/coreutils/" -o "/build-bins/coreutils"
       eval v "${VFLAGS}" "./src/cp/" -o "/build-bins/cp"
       eval v "${VFLAGS}" "./src/csplit/" -o "/build-bins/csplit"
       eval v "${VFLAGS}" "./src/cut/" -o "/build-bins/cut"
       eval v "${VFLAGS}" "./src/date/" -o "/build-bins/date"
       eval v "${VFLAGS}" "./src/dd/" -o "/build-bins/dd"
       eval v "${VFLAGS}" "./src/df/" -o "/build-bins/df"
       eval v "${VFLAGS}" "./src/dir/" -o "/build-bins/dir"
       eval v "${VFLAGS}" "./src/dircolors/" -o "/build-bins/dircolors"
       eval v "${VFLAGS}" "./src/dirname/" -o "/build-bins/dirname"
       eval v "${VFLAGS}" "./src/du/" -o "/build-bins/du"
       eval v "${VFLAGS}" "./src/echo/" -o "/build-bins/echo"
       eval v "${VFLAGS}" "./src/env/" -o "/build-bins/env"
       eval v "${VFLAGS}" "./src/expand/" -o "/build-bins/expand"
       eval v "${VFLAGS}" "./src/expr/" -o "/build-bins/expr"
       eval v "${VFLAGS}" "./src/factor/" -o "/build-bins/factor"
       eval v "${VFLAGS}" "./src/false/" -o "/build-bins/false"
       eval v "${VFLAGS}" "./src/fmt/" -o "/build-bins/fmt"
       eval v "${VFLAGS}" "./src/fold/" -o "/build-bins/fold"
       eval v "${VFLAGS}" "./src/groups/" -o "/build-bins/groups"
       eval v "${VFLAGS}" "./src/head/" -o "/build-bins/head"
       eval v "${VFLAGS}" "./src/hostid/" -o "/build-bins/hostid"
       eval v "${VFLAGS}" "./src/hostname/" -o "/build-bins/hostname"
       eval v "${VFLAGS}" "./src/id/" -o "/build-bins/id"
       eval v "${VFLAGS}" "./src/install/" -o "/build-bins/install"
       eval v "${VFLAGS}" "./src/join/" -o "/build-bins/join"
       eval v "${VFLAGS}" "./src/kill/" -o "/build-bins/kill"
       eval v "${VFLAGS}" "./src/link/" -o "/build-bins/link"
       eval v "${VFLAGS}" "./src/ln/" -o "/build-bins/ln"
       eval v "${VFLAGS}" "./src/ls/" -o "/build-bins/ls"
       eval v "${VFLAGS}" "./src/md5sum/" -o "/build-bins/md5sum"
       eval v "${VFLAGS}" "./src/mkdir/" -o "/build-bins/mkdir"
       eval v "${VFLAGS}" "./src/mkfifo/" -o "/build-bins/mkfifo"
       eval v "${VFLAGS}" "./src/mknod/" -o "/build-bins/mknod"
       eval v "${VFLAGS}" "./src/mktemp/" -o "/build-bins/mktemp"
       eval v "${VFLAGS}" "./src/mv/" -o "/build-bins/mv"
       eval v "${VFLAGS}" "./src/nice/" -o "/build-bins/nice"
       eval v "${VFLAGS}" "./src/nohup/" -o "/build-bins/nohup"
       eval v "${VFLAGS}" "./src/nproc/" -o "/build-bins/nproc"
       eval v "${VFLAGS}" "./src/numfmt/" -o "/build-bins/numfmt"
       eval v "${VFLAGS}" "./src/od/" -o "/build-bins/od"
       eval v "${VFLAGS}" "./src/pathchk/" -o "/build-bins/pathchk"
       eval v "${VFLAGS}" "./src/pinky/" -o "/build-bins/pinky"
       eval v "${VFLAGS}" "./src/pr/" -o "/build-bins/pr"
       eval v "${VFLAGS}" "./src/printenv/" -o "/build-bins/printenv"
       eval v "${VFLAGS}" "./src/printf/" -o "/build-bins/printf"
       eval v "${VFLAGS}" "./src/ptx/" -o "/build-bins/ptx"
       eval v "${VFLAGS}" "./src/pwd/" -o "/build-bins/pwd"
       eval v "${VFLAGS}" "./src/readlink/" -o "/build-bins/readlink"
       eval v "${VFLAGS}" "./src/realpath/" -o "/build-bins/realpath"
       eval v "${VFLAGS}" "./src/reboot/" -o "/build-bins/reboot"
       eval v "${VFLAGS}" "./src/rm/" -o "/build-bins/rm"
       eval v "${VFLAGS}" "./src/rmdir/" -o "/build-bins/rmdir"
       eval v "${VFLAGS}" "./src/runcon/" -o "/build-bins/runcon"
       eval v "${VFLAGS}" "./src/seq/" -o "/build-bins/seq"
       eval v "${VFLAGS}" "./src/sha1sum/" -o "/build-bins/sha1sum"
       eval v "${VFLAGS}" "./src/sha224sum/" -o "/build-bins/sha224sum"
       eval v "${VFLAGS}" "./src/sha256sum/" -o "/build-bins/sha256sum"
       eval v "${VFLAGS}" "./src/sha384sum/" -o "/build-bins/sha384sum"
       eval v "${VFLAGS}" "./src/sha512sum/" -o "/build-bins/sha512sum"
       eval v "${VFLAGS}" "./src/shred/" -o "/build-bins/shred"
       eval v "${VFLAGS}" "./src/shuf/" -o "/build-bins/shuf"
       eval v "${VFLAGS}" "./src/sleep/" -o "/build-bins/sleep"
       eval v "${VFLAGS}" "./src/sort/" -o "/build-bins/sort"
       eval v "${VFLAGS}" "./src/split/" -o "/build-bins/split"
       eval v "${VFLAGS}" "./src/stat/" -o "/build-bins/stat"
       eval v "${VFLAGS}" "./src/stdbuf/" -o "/build-bins/stdbuf"
       eval v "${VFLAGS}" "./src/stty/" -o "/build-bins/stty"
       eval v "${VFLAGS}" "./src/sum/" -o "/build-bins/sum"
       eval v "${VFLAGS}" "./src/sync/" -o "/build-bins/sync"
       eval v "${VFLAGS}" "./src/tac/" -o "/build-bins/tac"
       eval v "${VFLAGS}" "./src/tail/" -o "/build-bins/tail"
       eval v "${VFLAGS}" "./src/tee/" -o "/build-bins/tee"
       eval v "${VFLAGS}" "./src/test/" -o "/build-bins/test"
       eval v "${VFLAGS}" "./src/timeout/" -o "/build-bins/timeout"
       eval v "${VFLAGS}" "./src/touch/" -o "/build-bins/touch"
       eval v "${VFLAGS}" "./src/tr/" -o "/build-bins/tr"
       eval v "${VFLAGS}" "./src/true/" -o "/build-bins/true"
       eval v "${VFLAGS}" "./src/truncate/" -o "/build-bins/truncate"
       eval v "${VFLAGS}" "./src/tsort/" -o "/build-bins/tsort"
       eval v "${VFLAGS}" "./src/tty/" -o "/build-bins/tty"
       eval v "${VFLAGS}" "./src/uname/" -o "/build-bins/uname"
       eval v "${VFLAGS}" "./src/unexpand/" -o "/build-bins/unexpand"
       eval v "${VFLAGS}" "./src/uniq/" -o "/build-bins/uniq"
       eval v "${VFLAGS}" "./src/unlink/" -o "/build-bins/unlink"
       eval v "${VFLAGS}" "./src/uptime/" -o "/build-bins/uptime"
       eval v "${VFLAGS}" "./src/users/" -o "/build-bins/users"
       eval v "${VFLAGS}" "./src/vdir/" -o "/build-bins/vdir"
       eval v "${VFLAGS}" "./src/wc/" -o "/build-bins/wc"
       eval v "${VFLAGS}" "./src/who/" -o "/build-bins/who"
       eval v "${VFLAGS}" "./src/whoami/" -o "/build-bins/whoami"
       eval v "${VFLAGS}" "./src/yes/" -o "/build-bins/yes"
      #Copy
       ( askalono --format "json" crawl --follow "$(realpath .)" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/LICENSE" ) 2>/dev/null
      #strip & info
       find "/build-bins/" -type f -exec objcopy --remove-section=".comment" --remove-section=".note.*" "{}" \;
       find "/build-bins/" -type f ! -name "*.no_strip" -exec strip --strip-debug --strip-dwo --strip-unneeded "{}" \; >/dev/null 2>&1
       file "/build-bins/"* && du -sh "/build-bins/"*
       popd >/dev/null 2>&1
      '
    #Copy & Meta
     docker cp "alpine-builder:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"
     cp -fv "${SBUILD_TMPDIR}/[" "${SBUILD_OUTDIR}/["