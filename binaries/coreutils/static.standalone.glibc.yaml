#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/coreutils/static.standalone.glibc.yaml
_disabled: false

pkg: "coreutils"
pkg_id: "github.com.coreutils.coreutils.standalone.glibc"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: 
  _default: "GNU File, Shell, and Text utilities"
  "[": "Check file types and compare values [coreutils]"
  arch: "Print machine hardware name (same as uname -m) [coreutils]"
  b2sum: "Compute and check BLAKE2 message digest [coreutils]"
  base32: "Base32 encode/decode data and print to standard output [coreutils]"
  base64: "Base64 encode/decode data and print to standard output [coreutils]"
  basename: "Strip directory and suffix from filenames [coreutils]"
  basenc: "Encode/decode data and print to standard output [coreutils]"
  cat: "Concatenate files and print on the standard output [coreutils]"
  chcon: "Change file security context [coreutils]"
  chgrp: "Change group ownership [coreutils]"
  chmod: "Change file owner and group [coreutils]"
  chown: "Change file owner and group [coreutils]"
  chroot: "Run command or interactive shell with special root directory [coreutils]"
  cksum: "Compute and verify file checksums [coreutils]"
  comm: "Compare two sorted files line by line [coreutils]"
  coreutils: "Multicall Binary for Coreutils: GNU File, Shell, and Text utilities"
  cp: "Copy files and directories [coreutils]"
  csplit: "Split a file into sections determined by context lines [coreutils]"
  cut: "Remove sections from each line of files [coreutils]"
  date: "Print or set the system date and time [coreutils]"
  dd: "Convert and Copy a file [coreutils]"
  df: "Report file system space usage [coreutils]"
  dir: "List directory contents [coreutils]"
  dircolors: "Color setup for ls [coreutils]"
  dirname: "Strip last component from file name [coreutils]"
  du: "Estimate file space usage [coreutils]"
  echo: "Display a line of text [coreutils]"
  env: "Run a program in a modified environment [coreutils]"
  expand: "Convert tabs to spaces [coreutils]"
  expr: "Evaluate expressions [coreutils]"
  factor: "Factor numbers [coreutils]"
  "false": "Do nothing, unsuccessfully [coreutils]"
  fmt: "Simple optimal text formatter [coreutils]"
  fold: "Wrap each input line to fit in specified width [coreutils]"
  ginstall: "Copy files and set attributes [coreutils]"
  groups: "Print the groups a user is in [coreutils]"
  head: "Output the first part of files [coreutils]"
  hostid: "Print the numeric identifier for the current host [coreutils]"
  hostname: "Display or set the system's host name [coreutils]"
  id: "Print real and effective user and group IDs [coreutils]"
  install: "Copy files and set attributes [coreutils]"
  join: "Join lines of two files on a common field [coreutils]"
  kill: "Send a signal (default: TERM) to given PIDs [coreutils]"
  link: "Call the link function to create a link to a file [coreutils]"
  ln: "Make links between files [coreutils]"
  logname: "Print user's login name [coreutils]"
  ls: "List directory contents [coreutils]"
  make-prime-list: "Generate Prime Numbers [coreutils]"
  md5sum: "Compute and check MD5 message digest [coreutils]"
  mkdir: "Make directories [coreutils]"
  mkfifo: "Make FIFOs (named pipes) [coreutils]"
  mknod: "Make block or character special files [coreutils]"
  mktemp: "Create a temporary file or directory [coreutils]"
  mv: "Move (rename) files [coreutils]"
  nice: "Run a program with modified scheduling priority [coreutils]"
  nl: "Number lines of files [coreutils]"
  nohup: "Run a command immune to hangups, with output to a non-tty [coreutils]"
  nproc: "Print the number of processing units available [coreutils]"
  numfmt: "Convert numbers from/to human-readable strings [coreutils]"
  od: "Dump files in octal and other formats [coreutils]"
  paste: "Merge lines of files [coreutils]"
  pathchk: "Check whether file names are valid or portable [coreutils]"
  pinky: "Lightweight finger [coreutils]"
  pr: "Convert text files for printing [coreutils]"
  printenv: "Print all or part of environment [coreutils]"
  printf: "Format and print data [coreutils]"
  ptx: "Produce a permuted index of file contents [coreutils]"
  pwd: "Print name of current/working directory [coreutils]"
  readlink: "Print resolved symbolic links or canonical file names [coreutils]"
  realpath: "Print the resolved path [coreutils]"
  rm: "Remove files or directories [coreutils]"
  rmdir: "Remove empty directories [coreutils]"
  runcon: "Run command with specified security context [coreutils]"
  seq: "Print a sequence of numbers [coreutils]"
  sha1sum: "Compute and check SHA1 message digest [coreutils]"
  sha224sum: "Compute and check SHA224 message digest [coreutils]"
  sha256sum: "Compute and check SHA256 message digest [coreutils]"
  sha384sum: "Compute and check SHA384 message digest [coreutils]"
  sha512sum: "Compute and check SHA512 message digest [coreutils]"
  shred: "Overwrite a file to hide its contents, and optionally delete it [coreutils]"
  shuf: "Generate random permutations [coreutils]"
  sleep: "Delay for a specified amount of time [coreutils]"
  sort: "Sort lines of text files [coreutils]"
  split: "Split a file into pieces [coreutils]"
  stat: "Display file or file system status [coreutils]"
  stdbuf: "Run COMMAND, with modified buffering operations for its standard streams [coreutils]"
  stty: "Change and print terminal line settings [coreutils]"
  sum: "Checksum and count the blocks in a file [coreutils]"
  sync: "Synchronize cached writes to persistent storage [coreutils]"
  tac: "Concatenate and print files in reverse [coreutils]"
  tail: "Output the last part of files [coreutils]"
  tee: "Read from standard input and write to standard output and files [coreutils]"
  test: "Check file types and compare values [coreutils]"
  timeout: "Run a command with a time limit [coreutils]"
  touch: "Change file timestamps [coreutils]"
  tr: "Translate or Delete characters [coreutils]"
  "true": "Do nothing, successfully [coreutils]"
  truncate: "Shrink or extend the size of a file to the specified size [coreutils]"
  tsort: "Perform topological sort [coreutils]"
  tty: "Print the file name of the terminal connected to standard input [coreutils]"
  uname: "Print system information [coreutils]"
  unexpand: "Convert spaces to tabs [coreutils]"
  uniq: "Report or omit repeated lines [coreutils]"
  unlink: "Call the unlink function to remove the specified file [coreutils]"
  uptime: "Display the time since the last boot [coreutils]"
  users: "Print the user names of users currently logged in to the current host [coreutils]"
  vdir: "List directory contents [coreutils]"
  wc: "Print newline, word, and byte counts for each file [coreutils]"
  who: "Show who is logged on [coreutils]"
  whoami: "Print effective user name [coreutils]"
  yes: "Output a string repeatedly until killed [coreutils]"
distro_pkg:
  alpine:
    - "coreutils"
  archlinux:
    aur:
      - "coreutils-git"
  debian:
    - "coreutils"
  gnuguix:
    - "coreutils"
  homebrew:
    - "coreutils"
  nixpkgs:
    - "coreutils"
homepage:
  - "https://www.gnu.org/software/coreutils/"
license:
  - id: "GPL-3.0"
    url: "https://github.com/coreutils/coreutils/raw/fbfd886e595cf9b021fc9d8363760953a1d3e6ca/COPYING"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built From Source (Latest Git TAG). Check/Report @ https://github.com/coreutils/coreutils"
  - "This is the standalone version i.e all progs are built individually"
  - "Statically Linked on Debian (GLIBC)"
provides:
  - "arch"
  - "b2sum"
  - "base32"
  - "base64"
  - "basename"
  - "basenc"
  - "cat"
  - "chcon"
  - "chgrp"
  - "chmod"
  - "chown"
  - "chroot"
  - "cksum"
  - "comm"
  - "cp"
  - "csplit"
  - "cut"
  - "date"
  - "dd"
  - "df"
  - "dir"
  - "dircolors"
  - "dirname"
  - "du"
  - "echo"
  - "env"
  - "expand"
  - "expr"
  - "factor"
  - "false"
  - "fmt"
  - "fold"
  - "ginstall"
  - "groups"
  - "head"
  - "hostid"
  - "hostname"  
  - "id"
  - "install"  
  - "join"
  - "kill"
  - "link"
  - "ln"
  - "logname"
  - "ls"
  - "make-prime-list"
  - "md5sum"
  - "mkdir"
  - "mkfifo"
  - "mknod"
  - "mktemp"
  - "mv"
  - "nice"
  - "nl"
  - "nohup"
  - "nproc"
  - "numfmt"
  - "od"
  - "paste"
  - "pathchk"
  - "pinky"
  - "pr"
  - "printenv"
  - "printf"
  - "ptx"
  - "pwd"
  - "readlink"
  - "realpath"
  - "rm"
  - "rmdir"
  - "runcon"
  - "seq"
  - "sha1sum"
  - "sha224sum"
  - "sha256sum"
  - "sha384sum"
  - "sha512sum"
  - "shred"
  - "shuf"
  - "sleep"
  - "sort"
  - "split"
  - "stat"
  - "stty"
  - "sum"
  - "sync"
  - "tac"
  - "tail"
  - "tee"
  - "test==["
  - "test==[["  
  - "timeout"
  - "touch"
  - "tr"
  - "true"
  - "truncate"
  - "tsort"
  - "tty"
  - "uname"
  - "unexpand"
  - "uniq"
  - "unlink"
  - "uptime"
  - "users"
  - "vdir"
  - "wc"
  - "who"
  - "whoami"
  - "yes"
repology:
  - "coreutils"
src_url:
  - "https://github.com/coreutils/coreutils"
tag:
  - "bootstrap"
  - "busybox"
  - "coreutils"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    git ls-remote --tags --refs "https://github.com/coreutils/coreutils" | awk '{print $2}' | sed 's|refs/tags/||' | sort --version-sort | tail -n 1 | tr -cd '0-9.'
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "debian-builder-unstable" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/debian-builder-unstable:$(uname -m)" \
      bash -l -c '
      #Setup ENV
       set -x ; mkdir -p "/build-bins" && pushd "$(mktemp -d)" >/dev/null 2>&1
      #Get Src
       curl -w "(Source) <== %{url}\n" -qfSL "https://ftp.gnu.org/gnu/coreutils/coreutils-${PKGVER}.tar.gz" -o "./coreutils.tgz"
       mkdir -p "./coreutils-${PKGVER}" && tar --strip-components=1 -xzf "./coreutils.tgz" -C "./coreutils-${PKGVER}"
       if [ ! -d "./coreutils-${PKGVER}" ] || [ "$(du -s "./coreutils-${PKGVER}" | cut -f1)" -le 100 ]; then
         echo -e "\n [X] FATAL: Extraction probably Failed\n"
        exit 1
       else
         cd "./coreutils-${PKGVER}"
       fi
      #Build
       export CC="clang"
       export CXX="clang++"
       export CFLAGS="-Os -flto=auto -fuse-ld=$(which mold) -g0 -pipe -static -static-pie -v -w -Wno-error"
       export CPPFLAGS="${CFLAGS}"
       export CXXFLAGS="${CFLAGS}"
       export LD="$(which mold)"
       export LDFLAGS="-static -static-pie -Wl,--Bstatic,--build-id=none,--no-dynamic-linker,--no-fatal-warnings,--static,--stats,--strip-all,-z,noexecstack,-z,pack-relative-relocs,-z,relro"
       export FORCE_UNSAFE_CONFIGURE="1"
       ulimit -n unlimited
       "./configure" --disable-shared --enable-static
       #https://github.com/moby/moby/issues/13451
       if [ -d "./confdir3/confdir3" ]; then
           ulimit -n unlimited 2>/dev/null
           timeout -k 05 05 apt purge busybox -y 2>/dev/null
           while [[ -e "./confdir3/confdir3" ]]; do mv "./confdir3/confdir3" "./confdir3a"; rmdir "./confdir3"; mv "./confdir3a" "./confdir3"; done; rmdir "./confdir3"
           "./configure" --disable-shared --enable-static 2>/dev/null
           reset ; "./configure" --disable-shared --enable-static
       fi
       make --jobs="$(($(nproc)+1))" --keep-going
       find "./src" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" readelf -p ".comment" "{}"
      #Copy
       find "./src" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" cp -fv "{}" "/build-bins/"
       cp -fv "/build-bins/test" "/build-bins/["
       ( askalono --format "json" crawl --follow "$(realpath .)" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/LICENSE" ) 2>/dev/null
      #strip & info
       find "/build-bins/" -type f -exec objcopy --remove-section=".comment" --remove-section=".note.*" "{}" \;
       find "/build-bins/" -type f ! -name "*.no_strip" -exec strip --strip-debug --strip-dwo --strip-unneeded "{}" \; >/dev/null 2>&1
       file "/build-bins/"* && du -sh "/build-bins/"*
       popd >/dev/null 2>&1
      '
    #Copy & Meta
     docker cp "debian-builder-unstable:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"
     cp -fv "${SBUILD_TMPDIR}/[" "${SBUILD_OUTDIR}/["