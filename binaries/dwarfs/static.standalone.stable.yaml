#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/dwarfs/static.standalone.stable.yaml
_disabled: false

pkg: "dwarfs"
pkg_id: "github.com.mhx.dwarfs.standalone"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: 
  _default: "Fast high compression read-only file system Tools"
  dwarfs: "Mount highly compressed read-only file system [dwarfs]"
  dwarfs2: "Mount highly compressed read-only file system (fuse2) [dwarfs]"
  dwarfsck: "Check DwarFS image [dwarfs]"
  dwarfsextract: "Extract DwarFS image [dwarfs]"
  mkdwarfs: "Create highly compressed read-only file systems [dwarfs]"
  mount.dwarfs: "Mount a dwarfs File System [dwarfs]"
  mount.dwarfs2: "Mount a dwarfs File System (fuse2) [dwarfs]"
  pxattr: "Manipulate xattr on Dwarfs File Systems [dwarfs]"
distro_pkg:
  archlinux:
    aur:
      - "dwarfs"
      - "dwarfs-bin"
      - "dwarfs-git"
  gnuguix:
    - "dwarfs"
  homebrew:
    - "dwarfs"
  nixpkgs:
    - "dwarfs"
homepage:
  - "https://github.com/mhx/dwarfs"
license:
  - id: "GPL-3.0"
    url: "https://github.com/mhx/dwarfs/raw/9724cf420392da1ae720ed7ab11e8ea33fd11558/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Pre Built Binary Fetched from Upstream. Check/Report @ https://github.com/mhx/dwarfs"
  - "This is the standalone version i.e all applets were built individually"
provides:
 - "dwarfs==mount.dwarfs"
 - "dwarfs2==mount.dwarfs2"
 - "dwarfsck"
 - "dwarfsextract"
 - "mkdwarfs"
 - "pxattr"
repology:
  - "dwarfs"
src_url:
  - "https://github.com/mhx/dwarfs"
tag:
  - "utility"
  - "archiving"
  - "compression"
  - "dwarfs"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://api.gh.pkgforge.dev/repos/mhx/dwarfs/releases?per_page=100" | jq -r '[.[] | select(.draft == false and .prerelease == false)] | .[0].tag_name | gsub("\\s+"; "")' | tr -d '"'\''[:space:]'
  run: |
    #Download
     case "$(uname -m)" in
       aarch64)
         soar dl "https://github.com/mhx/dwarfs@${PKGVER}" --match "linux,aarch64" --exclude "stack,universal" -o "${SBUILD_TMPDIR}/${PKG}.archive" --yes
         ;;
       x86_64)
         soar dl "https://github.com/mhx/dwarfs@${PKGVER}" --match "linux,x86_64" --exclude "stack,universal" -o "${SBUILD_TMPDIR}/${PKG}.archive" --yes
         ;;
     esac
    #Extract
    while E_X=$(find "${SBUILD_TMPDIR}" -type f -exec file -i "{}" + | 
     grep -Ei "archive|compressed|gzip|x-tar" |
     grep -iv "application/.*executable" |
     cut -d: -f1 | head -n1); [ -n "${E_X}" ]
     do
       7z e "${E_X}" -o"${SBUILD_TMPDIR}/." -y && {
        file -i "${E_X}" | grep -q "application/.*executable" && break
        rm -f "${E_X}"
       } || break
     done
    #Copy
    find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achv "{}" "${SBUILD_OUTDIR}"