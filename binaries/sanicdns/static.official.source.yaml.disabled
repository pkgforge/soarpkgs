#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/sanicdns/static.official.source.yaml
_disabled: false

pkg: "sanicdns"
pkg_id: "github.com.hadriansecurity.sanicdns.source"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: "Resolve DNS requests blazingly fast"
homepage:
  - "https://et.phoneho.me/sanicdns/"
  - "https://github.com/hadriansecurity/sanicdns"
license:
  - id: "AGPL-3.0"
    url: "https://github.com/hadriansecurity/sanicdns/raw/ac334189496d8d1108b50ab914b3b2e19aeb25c2/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built From Source. Check/Report @ https://github.com/hadriansecurity/sanicdns"
  - "You may need to setup support for hugepages: https://github.com/DPDK/dpdk/blob/main/usertools/dpdk-hugepages.py"
provides:
  - "sanicdns"
#repology:
#  - "sanicdns"
src_url:
  - "https://github.com/hadriansecurity/sanicdns"
tag:
  - "dns"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    pushd "$(mktemp -d)" >/dev/null 2>&1 && \
    git clone --depth="1" --filter="blob:none" --no-checkout --single-branch --quiet "https://github.com/adriansecurity/sanicdns" "./TEMPREPO" >/dev/null 2>&1 && \
    git --git-dir="./TEMPREPO/.git" --no-pager log -1 --pretty=format:'HEAD-%h-%cd' --date=format:'%y%m%dT%H%M%S' && \
    [ -d "$(realpath .)/TEMPREPO" ] && rm -rf "$(realpath .)" >/dev/null 2>&1 && popd >/dev/null 2>&1
  run: |
    #Build: https://github.com/hadriansecurity/sanicdns/blob/main/Dockerfile.build_static
     cd "${SBUILD_TMPDIR}" && \
     git clone --filter "blob:none" --quiet "https://github.com/hadriansecurity/sanicdns" "./TEMPREPO" && cd "./TEMPREPO/"
     docker build -f "./Dockerfile.build_static" --no-cache "."

   #Fails: https://et.phoneho.me/sanicdns/compiling_from_source.html

     docker build --tag "qemu-static" "./" --no-cache && rm -rf "${SBUILD_TMPDIR}/artifact" 2>/dev/null ; mkdir -pv "${SBUILD_TMPDIR}/artifact"



     docker run --privileged --net="host" --name "qemu-builder" "qemu-static" sh -c 'true'
     docker cp "qemu-builder:/work/artifact/." "${SBUILD_TMPDIR}/artifact/."
     docker stop "qemu-builder" >/dev/null 2>&1 ; docker rm "qemu-builder" >/dev/null 2>&1
     docker container rm "qemu-static" 2>/dev/null ; docker image rm "qemu-static" 2>/dev/null
    #Extract
     mkdir -pv "${SBUILD_TMPDIR}/STATIC_BUILD" && \
     find "${SBUILD_TMPDIR}/artifact" -type f -name '*.xz' -exec tar -xvf "{}" --strip-components="1" -C "${SBUILD_TMPDIR}/STATIC_BUILD" \;
    #Copy
     find "${SBUILD_TMPDIR}/STATIC_BUILD" -maxdepth 2 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"